android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    android.support.v4.app.FragmentTransaction setTransition(int) -> a
    void bumpBackStackNesting(int) -> b
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> b
    android.os.Bundle getArguments() -> b
    android.support.v4.app.FragmentActivity getActivity() -> c
    android.content.res.Resources getResources() -> d
    java.lang.String getString(int) -> a
    android.support.v4.app.FragmentManager getFragmentManager() -> e
    boolean isAdded() -> f
    boolean isDetached() -> g
    boolean isHidden() -> h
    void onHiddenChanged(boolean) -> a
    void setHasOptionsMenu(boolean) -> b
    void startActivity(android.content.Intent) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> c
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> i
    void onActivityCreated(android.os.Bundle) -> e
    void onViewStateRestored(android.os.Bundle) -> f
    void onStart() -> j
    void onResume() -> k
    void onSaveInstanceState(android.os.Bundle) -> g
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> l
    void onStop() -> m
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> n
    void onDestroy() -> o
    void initState() -> p
    void onDetach() -> q
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> r
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> a
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> s
    void performCreate(android.os.Bundle) -> h
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> i
    void performStart() -> t
    void performResume() -> u
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> v
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> j
    void performPause() -> w
    void performStop() -> x
    void performReallyStop() -> y
    void performDestroyView() -> z
    void performDestroy() -> A
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.u:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.w:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.x:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    android.support.v4.app.FragmentTransaction setTransition(int) -> a
    int commit() -> a
android.support.v4.app.ListFragment -> android.support.v4.app.y:
    android.os.Handler mHandler -> X
    java.lang.Runnable mRequestFocus -> Y
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> Z
    android.widget.ListAdapter mAdapter -> P
    android.widget.ListView mList -> Q
    android.view.View mEmptyView -> R
    android.widget.TextView mStandardEmptyView -> S
    android.view.View mProgressContainer -> T
    android.view.View mListContainer -> U
    java.lang.CharSequence mEmptyText -> V
    boolean mListShown -> W
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> n
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    android.widget.ListView getListView() -> B
    void setListShown(boolean,boolean) -> a
    void ensureList() -> C
android.support.v4.app.ListFragment$1 -> android.support.v4.app.z:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.aa:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.ab:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.ac:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ad:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ae:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.af:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.ag:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ah:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.ai:
    android.graphics.Bitmap mPicture -> a
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.aj:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ak:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> a
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> c
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> a
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    void setFlag(int,boolean) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.al:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.am:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.an:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.ao:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.ap:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.aq:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.ar:
    java.lang.CharSequence mBigContentTitle -> b
    java.lang.CharSequence mSummaryText -> c
    boolean mSummaryTextSet -> d
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.as:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.at:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.au:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.av:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.CursorAdapter -> android.support.v4.d.a:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.d.b:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.d.c:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.d.d:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.d.e:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.d.f:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.g:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.j:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.k:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.d.l:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
com.actionbarsherlock.ActionBarSherlock -> com.actionbarsherlock.a:
    java.lang.Class[] CONSTRUCTOR_ARGS -> d
    java.util.HashMap IMPLEMENTATIONS -> e
    android.app.Activity mActivity -> a
    boolean mIsDelegate -> b
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> c
    void registerImplementation(java.lang.Class) -> a
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int) -> a
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchPostResume() -> b
    void dispatchPause() -> c
    void dispatchStop() -> d
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchOpenOptionsMenu() -> f
    boolean dispatchCloseOptionsMenu() -> g
    void dispatchPostCreate(android.os.Bundle) -> a
    void dispatchTitleChanged(java.lang.CharSequence,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchMenuOpened(int,android.view.Menu) -> a
    void dispatchPanelClosed(int,android.view.Menu) -> b
    void dispatchDestroy() -> h
    void dispatchSaveInstanceState(android.os.Bundle) -> b
    void dispatchRestoreInstanceState(android.os.Bundle) -> c
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> i
    android.content.Context getThemedContext() -> j
com.actionbarsherlock.ActionBarSherlock$Implementation -> com.actionbarsherlock.b:
    int api() -> a
    int dpi() -> b
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> com.actionbarsherlock.c:
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> com.actionbarsherlock.d:
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> com.actionbarsherlock.e:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> com.actionbarsherlock.f:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> com.actionbarsherlock.g:
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> com.actionbarsherlock.h:
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> a
com.actionbarsherlock.R -> com.actionbarsherlock.i:
com.actionbarsherlock.R$attr -> com.actionbarsherlock.j:
    int textAppearanceSmall -> textAppearanceSmall
    int actionModeStyle -> actionModeStyle
    int searchViewCloseIcon -> searchViewCloseIcon
    int activityChooserViewStyle -> activityChooserViewStyle
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int headerBackground -> headerBackground
    int dividerVertical -> dividerVertical
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionBarDivider -> actionBarDivider
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int divider -> divider
    int navigationMode -> navigationMode
    int listPopupWindowStyle -> listPopupWindowStyle
    int actionBarItemBackground -> actionBarItemBackground
    int homeLayout -> homeLayout
    int progressBarPadding -> progressBarPadding
    int horizontalDivider -> horizontalDivider
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int textColorPrimary -> textColorPrimary
    int selectableItemBackground -> selectableItemBackground
    int backgroundSplit -> backgroundSplit
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int title -> title
    int preserveIconSpacing -> preserveIconSpacing
    int actionBarSize -> actionBarSize
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int searchViewEditQuery -> searchViewEditQuery
    int itemPadding -> itemPadding
    int searchViewTextField -> searchViewTextField
    int logo -> logo
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int backgroundStacked -> backgroundStacked
    int searchViewSearchIcon -> searchViewSearchIcon
    int itemTextAppearance -> itemTextAppearance
    int windowActionBar -> windowActionBar
    int windowSplitActionBar -> windowSplitActionBar
    int spinnerItemStyle -> spinnerItemStyle
    int background -> background
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int windowMinWidthMajor -> windowMinWidthMajor
    int initialActivityCount -> initialActivityCount
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int dropDownListViewStyle -> dropDownListViewStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int windowMinWidthMinor -> windowMinWidthMinor
    int actionModeBackground -> actionModeBackground
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int height -> height
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorSearchUrl -> textColorSearchUrl
    int actionButtonStyle -> actionButtonStyle
    int windowAnimationStyle -> windowAnimationStyle
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int actionBarTabStyle -> actionBarTabStyle
    int windowContentOverlay -> windowContentOverlay
    int actionBarStyle -> actionBarStyle
    int windowActionModeOverlay -> windowActionModeOverlay
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int windowNoTitle -> windowNoTitle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int verticalDivider -> verticalDivider
    int homeAsUpIndicator -> homeAsUpIndicator
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int itemBackground -> itemBackground
    int iconifiedByDefault -> iconifiedByDefault
    int searchResultListItemHeight -> searchResultListItemHeight
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionBarSplitStyle -> actionBarSplitStyle
    int popupMenuStyle -> popupMenuStyle
    int searchViewGoIcon -> searchViewGoIcon
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int buttonStyleSmall -> buttonStyleSmall
    int displayOptions -> displayOptions
    int titleTextStyle -> titleTextStyle
    int icon -> icon
    int customNavigationLayout -> customNavigationLayout
    int actionModeSplitBackground -> actionModeSplitBackground
    int queryHint -> queryHint
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int windowActionBarOverlay -> windowActionBarOverlay
    int searchDropdownBackground -> searchDropdownBackground
    int subtitleTextStyle -> subtitleTextStyle
    int progressBarStyle -> progressBarStyle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int subtitle -> subtitle
    int actionMenuTextColor -> actionMenuTextColor
    int actionDropDownStyle -> actionDropDownStyle
com.actionbarsherlock.R$bool -> com.actionbarsherlock.k:
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
com.actionbarsherlock.R$dimen -> com.actionbarsherlock.l:
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int action_button_min_width -> action_button_min_width
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__alert_dialog_title_height -> abs__alert_dialog_title_height
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
com.actionbarsherlock.R$id -> com.actionbarsherlock.m:
    int abs__action_bar_container -> abs__action_bar_container
    int normal -> normal
    int abs__search_go_btn -> abs__search_go_btn
    int abs__default_activity_button -> abs__default_activity_button
    int homeAsUp -> homeAsUp
    int abs__search_bar -> abs__search_bar
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__imageButton -> abs__imageButton
    int edit_query -> edit_query
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__search_voice_btn -> abs__search_voice_btn
    int disableHome -> disableHome
    int showTitle -> showTitle
    int abs__up -> abs__up
    int abs__split_action_bar -> abs__split_action_bar
    int abs__action_context_bar -> abs__action_context_bar
    int abs__list_item -> abs__list_item
    int abs__progress_horizontal -> abs__progress_horizontal
    int showHome -> showHome
    int abs__home -> abs__home
    int abs__search_src_text -> abs__search_src_text
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__checkbox -> abs__checkbox
    int abs__search_close_btn -> abs__search_close_btn
    int abs__image -> abs__image
    int showCustom -> showCustom
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__content -> abs__content
    int abs__icon -> abs__icon
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__search_badge -> abs__search_badge
    int abs__action_bar -> abs__action_bar
    int abs__search_plate -> abs__search_plate
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int wrap_content -> wrap_content
    int listMode -> listMode
    int abs__title -> abs__title
    int abs__progress_circular -> abs__progress_circular
    int useLogo -> useLogo
    int tabMode -> tabMode
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__radio -> abs__radio
    int abs__action_bar_title -> abs__action_bar_title
    int abs__search_button -> abs__search_button
    int abs__shortcut -> abs__shortcut
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__textButton -> abs__textButton
    int abs__titleDivider -> abs__titleDivider
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__submit_area -> abs__submit_area
com.actionbarsherlock.R$integer -> com.actionbarsherlock.n:
    int abs__max_action_buttons -> abs__max_action_buttons
com.actionbarsherlock.R$layout -> com.actionbarsherlock.o:
    int abs__dialog_title_holo -> abs__dialog_title_holo
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int sherlock_spinner_item -> sherlock_spinner_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__search_view -> abs__search_view
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__screen_action_bar -> abs__screen_action_bar
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_layout -> abs__list_menu_item_layout
    int abs__screen_simple -> abs__screen_simple
    int abs__action_bar_tab -> abs__action_bar_tab
com.actionbarsherlock.R$string -> com.actionbarsherlock.p:
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__activity_chooser_view_dialog_title_default -> abs__activity_chooser_view_dialog_title_default
    int abs__action_mode_done -> abs__action_mode_done
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__share_action_provider_share_with -> abs__share_action_provider_share_with
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
com.actionbarsherlock.R$styleable -> com.actionbarsherlock.q:
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int[] SherlockTheme -> SherlockTheme
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_android_windowIsFloating -> SherlockTheme_android_windowIsFloating
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int[] SherlockView -> SherlockView
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.a.a:
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    android.content.Context getThemedContext() -> a
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.a.b:
    int[] ATTRS -> b
    int gravity -> a
com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener -> com.actionbarsherlock.a.c:
    void onMenuVisibilityChanged(boolean) -> a
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> com.actionbarsherlock.a.d:
    boolean onNavigationItemSelected(int,long) -> a
com.actionbarsherlock.app.ActionBar$Tab -> com.actionbarsherlock.a.e:
    android.graphics.drawable.Drawable getIcon() -> a
    java.lang.CharSequence getText() -> b
    android.view.View getCustomView() -> c
    void select() -> d
    java.lang.CharSequence getContentDescription() -> e
com.actionbarsherlock.app.SherlockActivity -> com.actionbarsherlock.a.f:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> a
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> a
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> b
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> c
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> a
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> a
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> b
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
com.actionbarsherlock.internal.ActionBarSherlockCompat -> com.actionbarsherlock.internal.a:
    boolean mReserveOverflow -> e
    boolean mReserveOverflowSet -> f
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> g
    java.util.HashMap mNativeItemMap -> d
    android.view.ViewGroup mDecor -> h
    android.view.ViewGroup mContentParent -> i
    boolean mIsTitleReady -> j
    boolean mIsDestroyed -> k
    boolean mClosingActionMenu -> l
    boolean mMenuIsPrepared -> m
    boolean mMenuRefreshContent -> n
    android.os.Bundle mMenuFrozenActionViewState -> o
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> p
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> q
    int mFeatures -> r
    int mUiOptions -> s
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> t
    com.actionbarsherlock.view.ActionMode mActionMode -> u
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> v
    android.widget.TextView mTitleView -> w
    java.lang.CharSequence mTitle -> x
    boolean mIsFloating -> y
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void initActionBar() -> k
    android.content.Context getThemedContext() -> j
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchPostResume() -> b
    void dispatchPause() -> c
    void dispatchStop() -> d
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchOpenOptionsMenu() -> f
    boolean dispatchCloseOptionsMenu() -> g
    void dispatchPostCreate(android.os.Bundle) -> a
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchMenuOpened(int,android.view.Menu) -> a
    void dispatchPanelClosed(int,android.view.Menu) -> b
    void dispatchTitleChanged(java.lang.CharSequence,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    void dispatchDestroy() -> h
    void dispatchSaveInstanceState(android.os.Bundle) -> b
    void dispatchRestoreInstanceState(android.os.Bundle) -> c
    boolean preparePanel() -> l
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void reopenMenu(boolean) -> a
    boolean initializePanelMenu() -> m
    void checkCloseActionMenu(com.actionbarsherlock.view.Menu) -> c
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean) -> b
    boolean hasFeature(int) -> b
    boolean requestFeature(int) -> c
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void installDecor() -> n
    android.view.ViewGroup generateLayout() -> o
    boolean isReservingOverflow() -> p
    int loadUiOptionsFromManifest(android.app.Activity) -> a
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> a
    android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> a
    boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> c
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> com.actionbarsherlock.internal.b:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockNative -> com.actionbarsherlock.internal.c:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> d
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> e
    com.actionbarsherlock.app.ActionBar getActionBar() -> a
    void initActionBar() -> k
    void dispatchInvalidateOptionsMenu() -> e
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    void setContentView(int) -> a
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    android.content.Context getThemedContext() -> j
com.actionbarsherlock.internal.ResourcesCompat -> com.actionbarsherlock.internal.d:
    boolean getResources_getBoolean(android.content.Context,int) -> a
    int getResources_getInteger(android.content.Context,int) -> b
com.actionbarsherlock.internal.app.ActionBarImpl -> com.actionbarsherlock.internal.a.a:
    android.content.Context mContext -> f
    android.content.Context mThemedContext -> g
    android.app.Activity mActivity -> h
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> i
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> j
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> k
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> l
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> m
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> n
    java.util.ArrayList mTabs -> o
    int mSavedTabPosition -> p
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> a
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> b
    boolean mLastMenuVisibility -> q
    java.util.ArrayList mMenuVisibilityListeners -> r
    int mContextDisplayMode -> s
    boolean mHasEmbeddedTabs -> t
    android.os.Handler mHandler -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> u
    boolean mShowHideAnimationEnabled -> v
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> e
    void init(android.view.View) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setHasEmbeddedTabs(boolean) -> e
    void completeDeferredDestroyActionMode() -> b
    void setShowHideAnimationEnabled(boolean) -> c
    void dispatchMenuVisibilityChanged(boolean) -> d
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void setHomeButtonEnabled(boolean) -> b
    void setDisplayOptions(int,int) -> a
    int getNavigationMode() -> c
    android.content.Context getThemedContext() -> a
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl) -> a
    com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl) -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl) -> c
    int access$3(com.actionbarsherlock.internal.app.ActionBarImpl) -> d
    void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> com.actionbarsherlock.internal.a.b:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> com.actionbarsherlock.internal.a.c:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> a
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.app.ActionBarWrapper -> com.actionbarsherlock.internal.a.d:
    android.app.Activity mActivity -> a
    android.app.ActionBar mActionBar -> b
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> c
    java.util.Set mMenuVisibilityListeners -> d
    void setHomeButtonEnabled(boolean) -> b
    android.content.Context getThemedContext() -> a
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void setDisplayHomeAsUpEnabled(boolean) -> a
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> com.actionbarsherlock.internal.nineoldandroids.a.a:
    java.util.ArrayList mListeners -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> a
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> b
    java.util.ArrayList getListeners() -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> g
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> com.actionbarsherlock.internal.nineoldandroids.a.b:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> com.actionbarsherlock.internal.nineoldandroids.a.c:
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> com.actionbarsherlock.internal.nineoldandroids.a.d:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void start() -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone() -> h
    void sortNodes() -> i
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> g
    java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> c
    void access$5(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean) -> a
    java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> d
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> com.actionbarsherlock.internal.nineoldandroids.a.e:
    boolean canceled -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> b
    java.util.ArrayList val$nodesToStart -> c
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.actionbarsherlock.internal.nineoldandroids.a.f:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> com.actionbarsherlock.internal.nineoldandroids.a.g:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> com.actionbarsherlock.internal.nineoldandroids.a.h:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.actionbarsherlock.internal.nineoldandroids.a.i:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> e
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> com.actionbarsherlock.internal.nineoldandroids.a.j:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.k:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.a.l:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone() -> a
    float getFloatValue(float) -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> b
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.m:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> com.actionbarsherlock.internal.nineoldandroids.a.n:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float) -> a
    boolean hasValue() -> a
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    float getFraction() -> c
    android.view.animation.Interpolator getInterpolator() -> d
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.actionbarsherlock.internal.nineoldandroids.a.o:
    float mValue -> d
    float getFloatValue() -> f
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> e
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.a.p:
    int mNumKeyframes -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> a
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> com.actionbarsherlock.internal.nineoldandroids.a.q:
    java.lang.Object mTarget -> h
    java.lang.String mPropertyName -> i
    void setPropertyName(java.lang.String) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    void start() -> a
    void initAnimation() -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> a
    void animateValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone() -> i
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> j
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.a.r:
    java.lang.String mPropertyName -> a
    java.lang.reflect.Method mSetter -> b
    java.lang.reflect.Method mGetter -> g
    java.lang.Class mValueType -> c
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> i
    java.lang.Class[] FLOAT_VARIANTS -> j
    java.lang.Class[] INTEGER_VARIANTS -> k
    java.lang.Class[] DOUBLE_VARIANTS -> l
    java.util.HashMap sSetterPropertyMap -> m
    java.util.HashMap sGetterPropertyMap -> n
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> e
    java.lang.Object[] mTmpValueArray -> f
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> o
    java.lang.Object mAnimatedValue -> p
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupGetter(java.lang.Class) -> b
    void setupSetterAndGetter(java.lang.Object) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    void setAnimatedValue(java.lang.Object) -> b
    void init() -> b
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> a
    java.lang.String getPropertyName() -> c
    java.lang.Object getAnimatedValue() -> d
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> a
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.a.s:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> g
    float mFloatAnimatedValue -> h
    void setFloatValues(float[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> e
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> a
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> com.actionbarsherlock.internal.nineoldandroids.a.t:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> com.actionbarsherlock.internal.nineoldandroids.a.u:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    boolean mPlayingBackwards -> o
    int mCurrentIteration -> p
    float mCurrentFraction -> q
    boolean mStartedDelay -> r
    long mDelayStartTime -> s
    int mPlayingState -> d
    boolean mRunning -> t
    boolean mStarted -> u
    boolean mInitialized -> e
    long mDuration -> v
    long mStartDelay -> w
    long sFrameDelay -> x
    int mRepeatCount -> y
    int mRepeatMode -> z
    android.view.animation.Interpolator mInterpolator -> A
    java.util.ArrayList mUpdateListeners -> B
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> b
    void setFloatValues(float[]) -> a
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    void initAnimation() -> h
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    void setCurrentPlayTime(long) -> c
    long getCurrentPlayTime() -> k
    void setStartDelay(long) -> d
    void setInterpolator(android.view.animation.Interpolator) -> a
    void start(boolean) -> a
    void start() -> a
    void cancel() -> b
    void end() -> c
    boolean isRunning() -> d
    boolean isStarted() -> e
    void endAnimation() -> i
    void startAnimation() -> r
    boolean delayedAnimationFrame(long) -> a
    boolean animationFrame(long) -> e
    void animateValue(float) -> a
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> j
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> g
    java.lang.ThreadLocal access$2() -> l
    java.lang.ThreadLocal access$3() -> m
    java.lang.ThreadLocal access$4() -> n
    long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> a
    void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$7() -> o
    java.lang.ThreadLocal access$8() -> p
    boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> a
    void access$10(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean) -> a
    void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> c
    long access$12() -> q
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> com.actionbarsherlock.internal.nineoldandroids.a.v:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> com.actionbarsherlock.internal.nineoldandroids.a.w:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> com.actionbarsherlock.internal.nineoldandroids.a.x:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> com.actionbarsherlock.internal.nineoldandroids.a.y:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> com.actionbarsherlock.internal.nineoldandroids.a.z:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.actionbarsherlock.internal.nineoldandroids.a.aa:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.actionbarsherlock.internal.nineoldandroids.a.ab:
    void onAnimationUpdate(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> a
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.b.a:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> com.actionbarsherlock.internal.nineoldandroids.b.a.a:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    float mAlpha -> d
    float mScaleX -> e
    float mScaleY -> f
    float mTranslationX -> g
    float mTranslationY -> h
    android.graphics.RectF mBefore -> i
    android.graphics.RectF mAfter -> j
    android.graphics.Matrix mTempMatrix -> k
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    void setScaleY(float) -> b
    float getTranslationX() -> b
    void setTranslationX(float) -> c
    float getTranslationY() -> c
    void setTranslationY(float) -> d
    void prepareForUpdate() -> d
    void invalidateAfterUpdate() -> e
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void reset() -> reset
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView -> com.actionbarsherlock.internal.nineoldandroids.widget.a:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> a
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> com.actionbarsherlock.internal.view.a:
    com.actionbarsherlock.view.ActionProvider mProvider -> a
    com.actionbarsherlock.view.ActionProvider unwrap() -> a
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> com.actionbarsherlock.internal.view.b:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> com.actionbarsherlock.internal.view.c:
    void onViewAttachedToWindow(android.view.View) -> a
    void onViewDetachedFromWindow(android.view.View) -> b
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> com.actionbarsherlock.internal.view.menu.a:
    int mId -> a
    int mGroup -> b
    int mOrdering -> c
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    char mShortcutNumericChar -> f
    char mShortcutAlphabeticChar -> g
    android.graphics.drawable.Drawable mIconDrawable -> h
    android.content.Context mContext -> i
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> j
    int mFlags -> k
    int getGroupId() -> a
    android.graphics.drawable.Drawable getIcon() -> b
    int getItemId() -> c
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    boolean hasSubMenu() -> e
    boolean isVisible() -> f
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> a
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    android.view.View getActionView() -> g
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> h
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    boolean expandActionView() -> i
    boolean isActionViewExpanded() -> j
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> a
    java.lang.CharSequence mTitle -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> c
    android.widget.ImageButton mImageButton -> d
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> e
    boolean mAllowTextWithIcon -> f
    boolean mExpandedFormat -> g
    int mMinWidth -> h
    java.util.Set mListeners -> i
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> a
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> e
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> b
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> i
    boolean mReserveOverflow -> j
    boolean mReserveOverflowSet -> k
    int mWidthLimit -> l
    int mActionItemWidthLimit -> m
    int mMaxItems -> n
    boolean mMaxItemsSet -> o
    boolean mStrictWidthLimit -> p
    boolean mWidthLimitSet -> q
    boolean mExpandedActionViewsExclusive -> r
    int mMinCellSize -> s
    android.util.SparseBooleanArray mActionButtonGroups -> t
    android.view.View mScrapActionButtonView -> u
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> v
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> w
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> x
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> a
    int mOpenSubMenuId -> b
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean reserveOverflow(android.content.Context) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setWidthLimit(int,boolean) -> a
    void setItemLimit(int) -> a
    void setExpandedActionViewsExclusive(boolean) -> a
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void updateMenuView(boolean) -> b
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem) -> a
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> b
    boolean dismissPopupMenus() -> c
    boolean hideSubMenus() -> d
    boolean isOverflowMenuShowing() -> e
    boolean isOverflowReserved() -> f
    boolean flagActionItems() -> g
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> a
    void access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> a
    android.view.View access$2(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> b
    void access$3(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> a
    void access$4(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> com.actionbarsherlock.internal.view.menu.b:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey -> com.actionbarsherlock.internal.view.menu.c:
    boolean get(android.content.Context) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> com.actionbarsherlock.internal.view.menu.d:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> com.actionbarsherlock.internal.view.menu.e:
    java.util.Set mListeners -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> a
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> b
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> com.actionbarsherlock.internal.view.menu.f:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> com.actionbarsherlock.internal.view.menu.g:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> com.actionbarsherlock.internal.view.menu.h:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> b
    boolean mReserveOverflow -> c
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> d
    boolean mFormatItems -> e
    int mFormatItemsWidth -> f
    int mMinCellSize -> g
    int mGeneratedItemPadding -> h
    boolean mFirst -> i
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> setPresenter
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> a
    int measureChildForCells(android.view.View,int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOverflowReserved(boolean) -> setOverflowReserved
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> b
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasDividerBeforeChildAt(int) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> com.actionbarsherlock.internal.view.menu.i:
    boolean needsDividerBefore() -> c
    boolean needsDividerAfter() -> d
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.j:
    boolean isOverflowButton -> a
    int cellsUsed -> b
    int extraPixels -> c
    boolean expandable -> d
    boolean preventEdgeOffset -> e
    boolean expanded -> f
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> com.actionbarsherlock.internal.view.menu.k:
    boolean IS_HONEYCOMB -> a
    android.content.Context mSystemContext -> c
    android.content.Context mContext -> d
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> e
    android.view.LayoutInflater mSystemInflater -> f
    android.view.LayoutInflater mInflater -> g
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> b
    int mMenuLayoutRes -> i
    int mItemLayoutRes -> j
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> h
    int mId -> k
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> a
    void updateMenuView(boolean) -> b
    void addItemView(android.view.View,int) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> b
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> a
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    void setId(int) -> b
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> b
    android.widget.ImageView mIconView -> c
    android.widget.RadioButton mRadioButton -> d
    android.widget.TextView mTitleView -> e
    android.widget.CheckBox mCheckBox -> f
    android.widget.TextView mShortcutView -> g
    android.graphics.drawable.Drawable mBackground -> h
    int mTextAppearance -> i
    android.content.Context mTextAppearanceContext -> j
    boolean mPreserveIconSpacing -> k
    android.view.LayoutInflater mInflater -> l
    boolean mForceShowIcon -> m
    android.content.Context mContext -> a
    void onFinishInflate() -> onFinishInflate
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> a
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> b
    void insertRadioButton() -> c
    void insertCheckBox() -> d
    boolean prefersCondensedTitle() -> a
    android.view.LayoutInflater getInflater() -> getInflater
com.actionbarsherlock.internal.view.menu.MenuBuilder -> com.actionbarsherlock.internal.view.menu.l:
    int[] sCategoryToOrder -> d
    android.content.Context mContext -> e
    android.content.res.Resources mResources -> f
    boolean mQwertyMode -> g
    boolean mShortcutsVisible -> h
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> i
    java.util.ArrayList mItems -> j
    java.util.ArrayList mVisibleItems -> k
    boolean mIsVisibleItemsStale -> l
    java.util.ArrayList mActionItems -> m
    java.util.ArrayList mNonActionItems -> n
    boolean mIsActionItemsStale -> o
    int mDefaultShowAsAction -> p
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> q
    java.lang.CharSequence mHeaderTitle -> a
    android.graphics.drawable.Drawable mHeaderIcon -> b
    android.view.View mHeaderView -> c
    boolean mPreventDispatchingItemsChanged -> r
    boolean mItemsChangedWhileDispatchPrevented -> s
    boolean mOptionalIconsVisible -> t
    boolean mIsClosing -> u
    java.util.ArrayList mTempShortcutItemList -> v
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> x
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> a
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> b
    void dispatchPresenterUpdate(boolean) -> d
    boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void saveActionViewStates(android.os.Bundle) -> a
    void restoreActionViewStates(android.os.Bundle) -> b
    java.lang.String getActionViewStatesKey() -> a
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> a
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> c
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void clear() -> b
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> a
    void setGroupCheckable(int,boolean,boolean) -> a
    boolean hasVisibleItems() -> c
    com.actionbarsherlock.view.MenuItem findItem(int) -> a
    int size() -> d
    com.actionbarsherlock.view.MenuItem getItem(int) -> b
    void setQwertyMode(boolean) -> a
    int getOrdering(int) -> c
    boolean isQwertyMode() -> e
    void setShortcutsVisibleInner(boolean) -> e
    boolean isShortcutsVisible() -> f
    android.content.res.Resources getResources() -> g
    android.content.Context getContext() -> h
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void changeMenuMode() -> i
    int findInsertIndex(java.util.ArrayList,int) -> a
    boolean performItemAction(com.actionbarsherlock.view.MenuItem,int) -> a
    void close(boolean) -> b
    void close() -> j
    void onItemsChanged(boolean) -> c
    void stopDispatchingItemsChanged() -> k
    void startDispatchingItemsChanged() -> l
    void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    java.util.ArrayList getVisibleItems() -> m
    void flagActionItems() -> n
    java.util.ArrayList getActionItems() -> o
    java.util.ArrayList getNonActionItems() -> p
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> q
    boolean getOptionalIconsVisible() -> r
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> d
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> s
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> a
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> com.actionbarsherlock.internal.view.menu.m:
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> com.actionbarsherlock.internal.view.menu.n:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> com.actionbarsherlock.internal.view.menu.o:
    int mId -> a
    int mGroup -> b
    int mCategoryOrder -> c
    int mOrdering -> d
    java.lang.CharSequence mTitle -> e
    java.lang.CharSequence mTitleCondensed -> f
    android.content.Intent mIntent -> g
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> i
    android.graphics.drawable.Drawable mIconDrawable -> j
    int mIconResId -> k
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> l
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> m
    java.lang.Runnable mItemCallback -> n
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> o
    int mFlags -> p
    int mShowAsAction -> q
    android.view.View mActionView -> r
    com.actionbarsherlock.view.ActionProvider mActionProvider -> s
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> t
    boolean mIsActionViewExpanded -> u
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> v
    java.lang.String sPrependShortcutLabel -> w
    java.lang.String sEnterShortcutLabel -> x
    java.lang.String sDeleteShortcutLabel -> y
    java.lang.String sSpaceShortcutLabel -> z
    boolean invoke() -> k
    boolean isEnabled() -> l
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    int getGroupId() -> a
    int getItemId() -> c
    int getOrder() -> m
    int getOrdering() -> n
    android.content.Intent getIntent() -> o
    char getAlphabeticShortcut() -> p
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    char getNumericShortcut() -> q
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    char getShortcut() -> r
    java.lang.String getShortcutLabel() -> s
    boolean shouldShowShortcut() -> t
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    boolean hasSubMenu() -> e
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    java.lang.CharSequence getTitle() -> u
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> a
    java.lang.CharSequence getTitleCondensed() -> v
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    boolean isCheckable() -> w
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    void setExclusiveCheckable(boolean) -> e
    boolean isExclusiveCheckable() -> x
    boolean isChecked() -> y
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    void setCheckedInt(boolean) -> f
    boolean isVisible() -> f
    boolean setVisibleInt(boolean) -> g
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    void actionFormatChanged() -> z
    boolean shouldShowIcon() -> A
    boolean isActionButton() -> B
    boolean requestsActionButton() -> C
    boolean requiresActionButton() -> D
    void setIsActionButton(boolean) -> h
    boolean showsTextAsAction() -> E
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> g
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> h
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    boolean expandActionView() -> i
    boolean collapseActionView() -> F
    boolean hasCollapsibleActionView() -> G
    void setActionViewExpanded(boolean) -> i
    boolean isActionViewExpanded() -> j
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> com.actionbarsherlock.internal.view.menu.p:
    android.view.MenuItem mNativeItem -> a
    com.actionbarsherlock.view.SubMenu mSubMenu -> b
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> c
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> d
    android.view.MenuItem$OnActionExpandListener mNativeActionExpandListener -> e
    int getItemId() -> c
    int getGroupId() -> a
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    boolean isVisible() -> f
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    boolean hasSubMenu() -> e
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> g
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> h
    boolean expandActionView() -> i
    boolean isActionViewExpanded() -> j
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> com.actionbarsherlock.internal.view.menu.q:
    int ITEM_LAYOUT -> b
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> e
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> f
    int mPopupMaxWidth -> g
    android.view.View mAnchorView -> h
    boolean mOverflowOnly -> i
    android.view.ViewTreeObserver mTreeObserver -> j
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> k
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> l
    boolean mForceShowIcon -> c
    android.view.ViewGroup mMeasureParent -> m
    void setAnchorView(android.view.View) -> c
    void setForceShowIcon(boolean) -> a
    void show() -> a
    boolean tryShow() -> b
    void dismiss() -> c
    void onDismiss() -> onDismiss
    boolean isShowing() -> d
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> a
    void onGlobalLayout() -> onGlobalLayout
    void onViewAttachedToWindow(android.view.View) -> a
    void onViewDetachedFromWindow(android.view.View) -> b
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
    boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> a
    android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> b
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> d
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> com.actionbarsherlock.internal.view.menu.r:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> com.actionbarsherlock.internal.view.menu.s:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> b
    int mExpandedIndex -> c
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> a
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> a
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> a
com.actionbarsherlock.internal.view.menu.MenuPresenter -> com.actionbarsherlock.internal.view.menu.t:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> com.actionbarsherlock.internal.view.menu.u:
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> b
com.actionbarsherlock.internal.view.menu.MenuView -> com.actionbarsherlock.internal.view.menu.v:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> com.actionbarsherlock.internal.view.menu.w:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    boolean prefersCondensedTitle() -> a
com.actionbarsherlock.internal.view.menu.MenuWrapper -> com.actionbarsherlock.internal.view.menu.x:
    android.view.Menu mNativeMenu -> a
    java.util.WeakHashMap mNativeMap -> b
    android.view.Menu unwrap() -> a
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> b
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void setGroupCheckable(int,boolean,boolean) -> a
    com.actionbarsherlock.view.MenuItem findItem(int) -> a
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> a
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> com.actionbarsherlock.internal.view.menu.y:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> d
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> e
    void setQwertyMode(boolean) -> a
    boolean isQwertyMode() -> e
    boolean isShortcutsVisible() -> f
    com.actionbarsherlock.view.Menu getParentMenu() -> t
    com.actionbarsherlock.view.MenuItem getItem() -> u
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> a
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> q
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> a
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> b
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> c
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> d
    java.lang.String getActionViewStatesKey() -> a
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> com.actionbarsherlock.internal.view.menu.z:
    android.view.SubMenu mNativeSubMenu -> a
    com.actionbarsherlock.view.MenuItem mItem -> b
    com.actionbarsherlock.view.MenuItem getItem() -> u
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.a:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> a
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> b
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> c
    boolean mSplitActionBar -> d
    boolean mSplitWhenNarrow -> e
    int mContentHeight -> f
    android.content.Context mContext -> g
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> h
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> i
    android.view.animation.Interpolator sAlphaInterpolator -> j
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> a
    void postShowOverflowMenu() -> b
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    boolean isOverflowReserved() -> e
    void dismissPopupMenus() -> f
    int measureChildView(android.view.View,int,int,int) -> a
    int positionChild(android.view.View,int,int,int) -> b
    int positionChildInverse(android.view.View,int,int,int) -> c
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> com.actionbarsherlock.internal.widget.b:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.c:
    boolean mCanceled -> c
    int mFinalVisibility -> a
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> b
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> a
    android.view.View mTabContainer -> b
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> c
    android.graphics.drawable.Drawable mBackground -> d
    android.graphics.drawable.Drawable mStackedBackground -> e
    android.graphics.drawable.Drawable mSplitBackground -> f
    boolean mIsSplit -> g
    boolean mIsStacked -> h
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> j
    java.lang.CharSequence mSubtitle -> k
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> l
    android.view.View mCustomView -> m
    android.widget.LinearLayout mTitleLayout -> n
    android.widget.TextView mTitleView -> o
    android.widget.TextView mSubtitleView -> p
    int mTitleStyleRes -> q
    int mSubtitleStyleRes -> r
    android.graphics.drawable.Drawable mSplitBackground -> s
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> t
    boolean mAnimateInOnLayout -> u
    int mAnimationMode -> v
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> h
    void finishAnimation() -> i
    void killMode() -> g
    boolean showOverflowMenu() -> a
    boolean hideOverflowMenu() -> c
    boolean isOverflowMenuShowing() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation() -> j
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> b
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> a
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> c
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> d
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    int mNavigationMode -> l
    int mDisplayOptions -> m
    java.lang.CharSequence mTitle -> n
    java.lang.CharSequence mSubtitle -> o
    android.graphics.drawable.Drawable mIcon -> p
    android.graphics.drawable.Drawable mLogo -> q
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> r
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> s
    android.widget.LinearLayout mTitleLayout -> t
    android.widget.TextView mTitleView -> u
    android.widget.TextView mSubtitleView -> v
    android.view.View mTitleUpView -> w
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> x
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> y
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> z
    android.view.View mCustomNavView -> A
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> B
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> C
    int mProgressBarPadding -> D
    int mItemPadding -> E
    int mTitleStyleRes -> F
    int mSubtitleStyleRes -> G
    int mProgressStyle -> H
    int mIndeterminateProgressStyle -> I
    boolean mUserTitle -> J
    boolean mIncludeTabs -> K
    boolean mIsCollapsable -> L
    boolean mIsCollapsed -> M
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> N
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> O
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> P
    android.widget.SpinnerAdapter mSpinnerAdapter -> Q
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> R
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> S
    android.view.View mExpandedActionView -> j
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> k
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> T
    android.view.View$OnClickListener mExpandedActionViewUpListener -> U
    android.view.View$OnClickListener mUpClickListener -> V
    int loadLogoFromManifest(android.app.Activity) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> g
    void initIndeterminateProgress() -> h
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> i
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> a
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    boolean hasExpandedActionView() -> j
    void collapseActionView() -> k
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> m
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> l
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView) -> a
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView) -> b
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView) -> c
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView) -> d
    android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView) -> e
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView) -> f
    android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView) -> g
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView) -> h
    com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView) -> i
    android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView) -> j
    int access$10(com.actionbarsherlock.internal.widget.ActionBarView) -> k
    void access$11(com.actionbarsherlock.internal.widget.ActionBarView) -> l
    int access$12(com.actionbarsherlock.internal.widget.ActionBarView) -> m
com.actionbarsherlock.internal.widget.ActionBarView$1 -> com.actionbarsherlock.internal.widget.d:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
com.actionbarsherlock.internal.widget.ActionBarView$2 -> com.actionbarsherlock.internal.widget.e:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> com.actionbarsherlock.internal.widget.f:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> com.actionbarsherlock.internal.widget.g:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> a
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> c
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> a
    void updateMenuView(boolean) -> b
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> a
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> a
    boolean flagActionItems() -> g
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> a
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> b
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> a
    android.widget.ImageView mIconView -> b
    int mUpWidth -> c
    void setUp(boolean) -> setUp
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> getLeftOffset
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> a
    boolean isOverflowOpen -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> com.actionbarsherlock.internal.widget.h:
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_Button -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.i:
    boolean SANS_ICE_CREAM -> a
    boolean IS_GINGERBREAD -> b
    int[] R_styleable_TextView -> c
    boolean mAllCaps -> d
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper -> com.actionbarsherlock.internal.widget.j:
    com.actionbarsherlock.view.CollapsibleActionView child -> a
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View unwrap() -> a
com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow -> com.actionbarsherlock.internal.widget.FakeDialogPhoneWindow:
    android.util.TypedValue mMinWidthMajor -> a
    android.util.TypedValue mMinWidthMinor -> b
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> F
    android.widget.SpinnerAdapter mAdapter -> a
    int mHeightMeasureSpec -> b
    int mWidthMeasureSpec -> c
    boolean mBlockLayoutRequests -> d
    int mSelectionLeftPadding -> e
    int mSelectionTopPadding -> f
    int mSelectionRightPadding -> g
    int mSelectionBottomPadding -> h
    android.graphics.Rect mSpinnerPadding -> i
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> j
    android.database.DataSetObserver mDataSetObserver -> G
    void initAbsSpinner() -> j
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void resetList() -> a
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> a
    int getChildWidth(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> b
    void setSelection(int) -> setSelection
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getCount() -> getCount
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean) -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> com.actionbarsherlock.internal.widget.k:
    android.util.SparseArray mScrapHeap -> b
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> a
    void put(int,android.view.View) -> a
    android.view.View get(int) -> a
    void clear() -> a
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> a
    int position -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> com.actionbarsherlock.internal.widget.l:
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.m:
    int mFirstPosition -> k
    int mSpecificTop -> l
    int mSyncPosition -> m
    long mSyncRowId -> n
    long mSyncHeight -> o
    boolean mNeedSync -> p
    int mSyncMode -> q
    int mLayoutHeight -> a
    boolean mInLayout -> r
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> s
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> t
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener mOnItemLongClickListener -> u
    boolean mDataChanged -> v
    int mNextSelectedPosition -> w
    long mNextSelectedRowId -> x
    int mSelectedPosition -> y
    long mSelectedRowId -> z
    android.view.View mEmptyView -> b
    int mItemCount -> A
    int mOldItemCount -> B
    int mOldSelectedPosition -> C
    long mOldSelectedRowId -> D
    boolean mDesiredFocusableState -> c
    boolean mDesiredFocusableInTouchModeState -> d
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> e
    boolean mBlockLayoutRequests -> E
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    void setOnItemLongClickListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> c
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> d
    void updateEmptyStatus(boolean) -> a
    long getItemIdAtPosition(int) -> a
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> e
    void fireOnSelected() -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> b
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> f
    void checkSelectionChanged() -> g
    int findSyncPosition() -> h
    int lookForSelectablePosition(int,boolean) -> a
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> i
    void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> a
    android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView) -> b
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> com.actionbarsherlock.internal.widget.n:
    android.os.Parcelable mInstanceState -> b
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener -> com.actionbarsherlock.internal.widget.o:
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> com.actionbarsherlock.internal.widget.p:
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> com.actionbarsherlock.internal.widget.q:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsColorDrawable -> com.actionbarsherlock.internal.widget.r:
    int color -> a
    android.graphics.Paint paint -> b
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] R_styleable_LinearLayout -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerWidth -> c
    int mDividerHeight -> d
    int mShowDividers -> e
    int mDividerPadding -> f
    boolean mUseLargestChild -> g
    void setShowDividers(int) -> setShowDividers
    int getShowDividers() -> getShowDividers
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> a
    void drawDividersHorizontal(android.graphics.Canvas) -> b
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    boolean hasDividerBeforeChildAt(int) -> a
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    void onMeasure(int,int) -> onMeasure
    void useLargestChildHorizontal() -> a
    void useLargestChildVertical() -> b
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.s:
    android.content.Context mContext -> a
    android.widget.PopupWindow mPopup -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> d
    int mDropDownHeight -> e
    int mDropDownWidth -> f
    int mDropDownHorizontalOffset -> g
    int mDropDownVerticalOffset -> h
    boolean mDropDownVerticalOffsetSet -> i
    int mListItemExpandMaximum -> j
    android.view.View mPromptView -> k
    int mPromptPosition -> l
    android.database.DataSetObserver mObserver -> m
    android.view.View mDropDownAnchorView -> n
    android.graphics.drawable.Drawable mDropDownListHighlight -> o
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> p
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> q
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> r
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> s
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> t
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> u
    android.os.Handler mHandler -> v
    android.graphics.Rect mTempRect -> w
    boolean mModal -> x
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptPosition(int) -> a
    void setModal(boolean) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setAnchorView(android.view.View) -> a
    void setHorizontalOffset(int) -> b
    void setVerticalOffset(int) -> c
    void setContentWidth(int) -> d
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void show() -> a
    void dismiss() -> b
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void setInputMethodMode(int) -> e
    void clearListSelection() -> c
    boolean isShowing() -> d
    boolean isInputMethodNotNeeded() -> f
    android.widget.ListView getListView() -> e
    int buildDropDown() -> g
    int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    int measureHeightOfChildren(int,int,int,int,int) -> a
    void measureScrapChild(android.view.View,int,int) -> a
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> a
    int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> b
    android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> c
    android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> d
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> e
    boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> f
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> com.actionbarsherlock.internal.widget.t:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> com.actionbarsherlock.internal.widget.u:
    boolean mListSelectionHidden -> a
    boolean mHijackFocus -> b
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> a
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> com.actionbarsherlock.internal.widget.v:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> com.actionbarsherlock.internal.widget.w:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> com.actionbarsherlock.internal.widget.x:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> com.actionbarsherlock.internal.widget.y:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> com.actionbarsherlock.internal.widget.z:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> f
    int[] ProgressBar -> g
    int mMinWidth -> a
    int mMaxWidth -> b
    int mMinHeight -> c
    int mMaxHeight -> d
    int mProgress -> h
    int mSecondaryProgress -> i
    int mMax -> j
    int mBehavior -> k
    int mDuration -> l
    boolean mIndeterminate -> m
    boolean mOnlyIndeterminate -> n
    android.view.animation.Transformation mTransformation -> o
    android.view.animation.AlphaAnimation mAnimation -> p
    android.graphics.drawable.Drawable mIndeterminateDrawable -> q
    int mIndeterminateRealLeft -> r
    int mIndeterminateRealTop -> s
    android.graphics.drawable.Drawable mProgressDrawable -> t
    android.graphics.drawable.Drawable mCurrentDrawable -> u
    android.graphics.Bitmap mSampleTile -> e
    boolean mNoInvalidate -> v
    android.view.animation.Interpolator mInterpolator -> w
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> x
    long mUiThreadId -> y
    boolean mShouldStartAnimationDrawable -> z
    long mLastDrawTime -> A
    boolean mInDrawing -> B
    int mAnimationResolution -> C
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> D
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> E
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    void initProgressBar() -> c
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> a
    void onProgressRefresh(float,boolean) -> a
    void refreshProgress(int,int,boolean) -> a
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> a
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void startAnimation() -> a
    void stopAnimation() -> b
    void setInterpolator(android.content.Context,int) -> a
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scheduleAccessibilityEventSender() -> e
    void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean) -> a
    void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> com.actionbarsherlock.internal.widget.aa:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> com.actionbarsherlock.internal.widget.ab:
    int mId -> b
    int mProgress -> c
    boolean mFromUser -> d
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> a
    void run() -> run
    void setup(int,int,boolean) -> a
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> a
    int secondaryProgress -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> com.actionbarsherlock.internal.widget.ac:
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel) -> a
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.ad:
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> G
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> H
    int mDropDownWidth -> F
    int mGravity -> I
    boolean mDisableChildrenWhenDisabled -> J
    android.graphics.Rect mTempRect -> K
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> b
    android.view.View makeAndAddView(int) -> b
    void setUpChild(android.view.View) -> setUpChild
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    java.lang.CharSequence getPrompt() -> getPrompt
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> com.actionbarsherlock.internal.widget.ae:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> com.actionbarsherlock.internal.widget.af:
    java.lang.CharSequence mHintText -> b
    android.widget.ListAdapter mAdapter -> c
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> a
    void setAdapter(android.widget.ListAdapter) -> a
    java.lang.CharSequence getHintText() -> f
    void setPromptText(java.lang.CharSequence) -> a
    void show() -> a
    com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup) -> a
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> com.actionbarsherlock.internal.widget.ag:
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> com.actionbarsherlock.internal.widget.ah:
    void setAdapter(android.widget.ListAdapter) -> a
    void show() -> a
    void dismiss() -> b
    boolean isShowing() -> d
    void setPromptText(java.lang.CharSequence) -> a
    java.lang.CharSequence getHintText() -> f
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> c
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> d
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> e
    boolean mAllowCollapse -> f
    android.view.LayoutInflater mInflater -> g
    int mMaxTabWidth -> b
    int mContentHeight -> h
    int mSelectedTabIndex -> i
    android.view.animation.Interpolator sAlphaInterpolator -> j
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> a
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> b
    boolean performExpand() -> c
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    com.actionbarsherlock.internal.widget.IcsSpinner createSpinner() -> d
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToTab(int) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> a
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> a
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> a
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> com.actionbarsherlock.internal.widget.ai:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    android.view.View val$tabView -> b
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> com.actionbarsherlock.internal.widget.aj:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener -> com.actionbarsherlock.internal.widget.ak:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> a
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> a
    com.actionbarsherlock.app.ActionBar$Tab mTab -> b
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> c
    android.widget.ImageView mIconView -> d
    android.view.View mCustomView -> e
    void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> a
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> a
    void onMeasure(int,int) -> onMeasure
    void update() -> a
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> getTab
com.actionbarsherlock.view.ActionMode -> com.actionbarsherlock.b.a:
    void finish() -> a
com.actionbarsherlock.view.ActionMode$Callback -> com.actionbarsherlock.b.b:
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> a
com.actionbarsherlock.view.ActionProvider -> com.actionbarsherlock.b.c:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> a
    android.view.View onCreateActionView() -> a
    boolean onPerformDefaultAction() -> b
    boolean hasSubMenu() -> c
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> a
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> a
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> com.actionbarsherlock.b.d:
com.actionbarsherlock.view.CollapsibleActionView -> com.actionbarsherlock.b.e:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
com.actionbarsherlock.view.Menu -> com.actionbarsherlock.b.f:
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> a
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> b
    void setGroupCheckable(int,boolean,boolean) -> a
    com.actionbarsherlock.view.MenuItem findItem(int) -> a
com.actionbarsherlock.view.MenuInflater -> com.actionbarsherlock.b.g:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> a
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> b
    java.lang.Object[] mActionViewConstructorArguments -> c
    java.lang.Object[] mActionProviderConstructorArguments -> d
    android.content.Context mContext -> e
    java.lang.Object mRealOwner -> f
    void inflate(int,com.actionbarsherlock.view.Menu) -> a
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu) -> a
    android.content.Context access$0(com.actionbarsherlock.view.MenuInflater) -> a
    java.lang.Class[] access$1() -> a
    java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater) -> b
    java.lang.Object access$3(com.actionbarsherlock.view.MenuInflater) -> c
    java.lang.Class[] access$4() -> b
    java.lang.Object[] access$5(com.actionbarsherlock.view.MenuInflater) -> d
com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener -> com.actionbarsherlock.b.h:
    java.lang.Class[] PARAM_TYPES -> a
    java.lang.Object mRealOwner -> b
    java.lang.reflect.Method mMethod -> c
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.view.MenuInflater$MenuState -> com.actionbarsherlock.b.i:
    com.actionbarsherlock.view.Menu menu -> b
    int groupId -> c
    int groupCategory -> d
    int groupOrder -> e
    int groupCheckable -> f
    boolean groupVisible -> g
    boolean groupEnabled -> h
    boolean itemAdded -> i
    int itemId -> j
    int itemCategoryOrder -> k
    java.lang.CharSequence itemTitle -> l
    java.lang.CharSequence itemTitleCondensed -> m
    int itemIconResId -> n
    char itemAlphabeticShortcut -> o
    char itemNumericShortcut -> p
    int itemCheckable -> q
    boolean itemChecked -> r
    boolean itemVisible -> s
    boolean itemEnabled -> t
    int itemShowAsAction -> u
    int itemActionViewLayout -> v
    java.lang.String itemActionViewClassName -> w
    java.lang.String itemActionProviderClassName -> x
    java.lang.String itemListenerMethodName -> y
    com.actionbarsherlock.view.ActionProvider itemActionProvider -> z
    com.actionbarsherlock.view.MenuInflater this$0 -> a
    void resetGroup() -> a
    void readGroup(android.util.AttributeSet) -> a
    void readItem(android.util.AttributeSet) -> b
    char getShortcut(java.lang.String) -> a
    void setItem(com.actionbarsherlock.view.MenuItem) -> a
    void addItem() -> b
    com.actionbarsherlock.view.SubMenu addSubMenuItem() -> c
    boolean hasAddedItem() -> d
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState) -> a
com.actionbarsherlock.view.MenuItem -> com.actionbarsherlock.b.j:
    int getItemId() -> c
    int getGroupId() -> a
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> b
    com.actionbarsherlock.view.MenuItem setIcon(int) -> a
    android.graphics.drawable.Drawable getIcon() -> b
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> b
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> a
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> a
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> b
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> d
    boolean isVisible() -> f
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> c
    boolean hasSubMenu() -> e
    com.actionbarsherlock.view.SubMenu getSubMenu() -> d
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> a
    void setShowAsAction(int) -> b
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> a
    com.actionbarsherlock.view.MenuItem setActionView(int) -> c
    android.view.View getActionView() -> g
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> a
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> h
    boolean expandActionView() -> i
    boolean isActionViewExpanded() -> j
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> com.actionbarsherlock.b.k:
    boolean onMenuItemActionExpand(com.actionbarsherlock.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(com.actionbarsherlock.view.MenuItem) -> b
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> com.actionbarsherlock.b.l:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.view.SubMenu -> com.actionbarsherlock.b.m:
    com.actionbarsherlock.view.MenuItem getItem() -> u
com.actionbarsherlock.view.Window -> com.actionbarsherlock.b.n:
com.actionbarsherlock.view.Window$Callback -> com.actionbarsherlock.b.o:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> a
com.actionbarsherlock.widget.SearchView -> com.actionbarsherlock.widget.SearchView:
    com.actionbarsherlock.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> a
    com.actionbarsherlock.widget.SearchView$OnCloseListener mOnCloseListener -> b
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> c
    com.actionbarsherlock.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> d
    android.view.View$OnClickListener mOnSearchClickListener -> e
    boolean mIconifiedByDefault -> f
    boolean mIconified -> g
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> h
    android.view.View mSearchButton -> i
    android.view.View mSubmitButton -> j
    android.view.View mSubmitArea -> k
    android.widget.ImageView mCloseButton -> l
    android.view.View mSearchEditFrame -> m
    android.view.View mVoiceButton -> n
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete mQueryTextView -> o
    android.widget.ImageView mSearchHintIcon -> p
    boolean mSubmitButtonEnabled -> q
    java.lang.CharSequence mQueryHint -> r
    boolean mQueryRefinement -> s
    boolean mClearingFocus -> t
    int mMaxWidth -> u
    boolean mVoiceButtonEnabled -> v
    boolean mExpandedInActionView -> w
    int mCollapsedImeOptions -> x
    android.app.SearchableInfo mSearchable -> y
    android.os.Bundle mAppSearchData -> z
    java.lang.Runnable mShowImeRunnable -> A
    java.lang.Runnable mUpdateDrawableStateRunnable -> B
    java.lang.Runnable mReleaseCursorRunnable -> C
    android.content.Intent mVoiceWebSearchIntent -> D
    android.content.Intent mVoiceAppSearchIntent -> E
    java.util.WeakHashMap mOutsideDrawablesCache -> F
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(com.actionbarsherlock.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(com.actionbarsherlock.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(com.actionbarsherlock.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> c
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> a
    boolean hasVoiceSearch() -> e
    boolean isSubmitAreaEnabled() -> f
    void updateSubmitButton(boolean) -> b
    void updateSubmitArea() -> g
    void updateCloseButton() -> h
    void postUpdateFocusedState() -> i
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> b
    void updateQueryHint() -> j
    void updateSearchAutoComplete() -> k
    void updateVoiceButton(boolean) -> c
    void onCloseClicked() -> l
    void onSearchClicked() -> m
    void onTextFocusChanged() -> d
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> b
    void onActionViewExpanded() -> a
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void setQuery(java.lang.CharSequence) -> setQuery
    void forceSuggestionQuery() -> n
    boolean isLandscapeMode(android.content.Context) -> a
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> b
    void setText(android.widget.AutoCompleteTextView,java.lang.CharSequence,boolean) -> a
    void access$19(android.widget.AutoCompleteTextView,boolean) -> a
    void access$20(com.actionbarsherlock.widget.SearchView,boolean) -> a
com.actionbarsherlock.widget.SearchView$OnCloseListener -> com.actionbarsherlock.widget.a:
    boolean onClose() -> a
com.actionbarsherlock.widget.SearchView$OnQueryTextListener -> com.actionbarsherlock.widget.b:
com.actionbarsherlock.widget.SearchView$OnSuggestionListener -> com.actionbarsherlock.widget.c:
com.actionbarsherlock.widget.SearchView$SearchAutoComplete -> com.actionbarsherlock.widget.SearchView$SearchAutoComplete:
    int mThreshold -> a
    com.actionbarsherlock.widget.SearchView mSearchView -> b
    void setSearchView(com.actionbarsherlock.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
com.actionbarsherlock.widget.SuggestionsAdapter -> com.actionbarsherlock.widget.d:
    android.app.SearchManager mSearchManager -> j
    com.actionbarsherlock.widget.SearchView mSearchView -> k
    android.content.Context mProviderContext -> l
    java.util.WeakHashMap mOutsideDrawablesCache -> m
    boolean mClosed -> n
    int mQueryRefinement -> o
    android.content.res.ColorStateList mUrlColor -> p
    int mText1Col -> q
    int mText2Col -> r
    int mText2UrlCol -> s
    int mIconName1Col -> t
    int mIconName2Col -> u
    int mFlagsCol -> v
    void setQueryRefinement(int) -> a
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getSuggestions(java.lang.String,int) -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> d
    void changeCursor(android.database.Cursor) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> b
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> e
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> f
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> b
    android.graphics.drawable.Drawable getTheDrawable(android.net.Uri) -> a
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> b
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> g
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache -> com.actionbarsherlock.widget.e:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon1 -> c
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
com.pheelicks.visualizer.AudioData -> com.pheelicks.visualizer.a:
    byte[] bytes -> a
com.pheelicks.visualizer.FFTData -> com.pheelicks.visualizer.b:
    byte[] bytes -> a
com.pheelicks.visualizer.VisualizerView -> com.pheelicks.visualizer.VisualizerView:
    byte[] mBytes -> m
    byte[] mFFTBytes -> n
    android.graphics.Rect mRect -> o
    android.media.audiofx.Visualizer mVisualizer -> p
    java.util.Set mRenderers -> q
    android.graphics.Paint mFlashPaint -> r
    android.graphics.Paint mFadePaint -> s
    it.angelic.soulissclient.fragments.RGBAdvancedFragment parent -> t
    float absMax_low -> a
    float absMax_med -> b
    float absMax_high -> c
    int k_low -> d
    int k_med -> e
    int k_high -> f
    boolean mFlash -> g
    android.graphics.Bitmap mCanvasBitmap -> h
    android.graphics.Canvas mCanvas -> i
    com.pheelicks.visualizer.FFTData fftData -> j
    com.pheelicks.visualizer.AudioData audioData -> k
    android.graphics.Matrix neo -> l
    void setFrag(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> setFrag
    void init() -> b
    void link(boolean) -> a
    void sendSoulissDario(byte[],boolean) -> a
    void addRenderer(com.pheelicks.visualizer.renderer.Renderer) -> a
    void release() -> a
    void setEnabled(boolean) -> setEnabled
    void updateVisualizer(byte[]) -> a
    void updateVisualizerFFT(byte[]) -> b
    void onDraw(android.graphics.Canvas) -> onDraw
com.pheelicks.visualizer.VisualizerView$1 -> com.pheelicks.visualizer.c:
    com.pheelicks.visualizer.VisualizerView this$0 -> a
    boolean val$multicast -> b
    void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onWaveFormDataCapture
    void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onFftDataCapture
com.pheelicks.visualizer.renderer.BarGraphRenderer -> com.pheelicks.visualizer.a.a:
    int mDivisions -> c
    android.graphics.Paint mPaint -> d
    boolean mTop -> e
    void onRender(android.graphics.Canvas,com.pheelicks.visualizer.AudioData,android.graphics.Rect) -> a
    void onRender(android.graphics.Canvas,com.pheelicks.visualizer.FFTData,android.graphics.Rect) -> a
com.pheelicks.visualizer.renderer.Renderer -> com.pheelicks.visualizer.a.b:
    float[] mPoints -> a
    float[] mFFTPoints -> b
    void onRender(android.graphics.Canvas,com.pheelicks.visualizer.AudioData,android.graphics.Rect) -> a
    void onRender(android.graphics.Canvas,com.pheelicks.visualizer.FFTData,android.graphics.Rect) -> a
    void render(android.graphics.Canvas,com.pheelicks.visualizer.AudioData,android.graphics.Rect) -> b
    void render(android.graphics.Canvas,com.pheelicks.visualizer.FFTData,android.graphics.Rect) -> b
com.robobunny.SeekBarPreference -> com.robobunny.SeekBarPreference:
    java.lang.String TAG -> a
    int mMaxValue -> b
    int mMinValue -> c
    int mInterval -> d
    int mCurrentValue -> e
    java.lang.String mUnitsLeft -> f
    java.lang.String mUnitsRight -> g
    android.widget.SeekBar mSeekBar -> h
    android.widget.TextView mStatusText -> i
    void initPreference(android.content.Context,android.util.AttributeSet) -> a
    void setValuesFromXml(android.util.AttributeSet) -> a
    java.lang.String getAttributeStringValue(android.util.AttributeSet,java.lang.String,java.lang.String,java.lang.String) -> a
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
    void onBindView(android.view.View) -> onBindView
    void updateView(android.view.View) -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
it.angelic.receivers.LifeCheckerEventReceiver -> it.angelic.receivers.LifeCheckerEventReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean isMyServiceRunning(android.content.Context) -> a
it.angelic.receivers.LifeCheckerSetupReceiver -> it.angelic.receivers.LifeCheckerSetupReceiver:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opts -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.receivers.NetworkStateReceiver -> it.angelic.receivers.NetworkStateReceiver:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void storeNetworkInfo(android.net.NetworkInfo,it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
it.angelic.soulissclient.AddProgramActivity -> it.angelic.soulissclient.AddProgramActivity:
    it.angelic.soulissclient.model.SoulissNode[] nodiArray -> a
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> b
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void fillNodeSpinner(android.widget.Spinner) -> a
    void setTypicalSpinner(android.widget.Spinner,it.angelic.soulissclient.model.SoulissNode) -> a
    void fillCommandSpinner(android.widget.Spinner,it.angelic.soulissclient.typicals.SoulissTypical) -> a
    void onDestroy() -> onDestroy
    it.angelic.soulissclient.model.SoulissNode[] access$0(it.angelic.soulissclient.AddProgramActivity) -> a
    void access$1(it.angelic.soulissclient.AddProgramActivity,android.widget.Spinner,it.angelic.soulissclient.model.SoulissNode) -> a
    void access$2(it.angelic.soulissclient.AddProgramActivity,android.widget.Spinner,it.angelic.soulissclient.typicals.SoulissTypical) -> a
    it.angelic.soulissclient.db.SoulissDBHelper access$3(it.angelic.soulissclient.AddProgramActivity) -> b
it.angelic.soulissclient.AddProgramActivity$1 -> it.angelic.soulissclient.a:
    it.angelic.soulissclient.AddProgramActivity this$0 -> a
    android.widget.Spinner val$outputTypicalSpinner -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.AddProgramActivity$10 -> it.angelic.soulissclient.b:
    it.angelic.soulissclient.AddProgramActivity this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.AddProgramActivity$2 -> it.angelic.soulissclient.c:
    it.angelic.soulissclient.AddProgramActivity this$0 -> a
    android.widget.Spinner val$outputNodeSpinner -> b
    android.widget.Spinner val$outputCommandSpinner -> c
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.AddProgramActivity$3 -> it.angelic.soulissclient.d:
    it.angelic.soulissclient.AddProgramActivity this$0 -> a
    android.widget.RadioButton val$radioPositional -> b
    android.widget.RadioButton val$radioSensorial -> c
    android.widget.CheckBox val$checkboxRecursive -> d
    android.widget.TimePicker val$tp -> e
    android.widget.Spinner val$spinnerInterval -> f
    android.widget.ToggleButton val$togglehomeaway -> g
    android.widget.Spinner val$triggeredTypicalSpinner -> h
    android.widget.Spinner val$triggeredNodeSpinner -> i
    android.widget.Button val$buttComparator -> j
    android.widget.EditText val$et -> k
    android.widget.TextView val$textviewPositional -> l
    android.widget.TextView val$textviewTimed -> m
    android.widget.TextView val$textviewTriggered -> n
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.AddProgramActivity$4 -> it.angelic.soulissclient.e:
    it.angelic.soulissclient.AddProgramActivity this$0 -> a
    android.widget.RadioButton val$radioTimed -> b
    android.widget.RadioButton val$radioSensorial -> c
    android.widget.CheckBox val$checkboxRecursive -> d
    android.widget.TimePicker val$tp -> e
    android.widget.Spinner val$spinnerInterval -> f
    android.widget.ToggleButton val$togglehomeaway -> g
    android.widget.Spinner val$triggeredTypicalSpinner -> h
    android.widget.Spinner val$triggeredNodeSpinner -> i
    android.widget.Button val$buttComparator -> j
    android.widget.EditText val$et -> k
    android.widget.TextView val$textviewPositional -> l
    android.widget.TextView val$textviewTimed -> m
    android.widget.TextView val$textviewTriggered -> n
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.AddProgramActivity$5 -> it.angelic.soulissclient.f:
    it.angelic.soulissclient.AddProgramActivity this$0 -> a
    android.widget.RadioButton val$radioTimed -> b
    android.widget.RadioButton val$radioPositional -> c
    android.widget.CheckBox val$checkboxRecursive -> d
    android.widget.TimePicker val$tp -> e
    android.widget.Spinner val$spinnerInterval -> f
    android.widget.ToggleButton val$togglehomeaway -> g
    android.widget.Spinner val$triggeredTypicalSpinner -> h
    android.widget.Spinner val$triggeredNodeSpinner -> i
    android.widget.Button val$buttComparator -> j
    android.widget.EditText val$et -> k
    android.widget.TextView val$textviewPositional -> l
    android.widget.TextView val$textviewTimed -> m
    android.widget.TextView val$textviewTriggered -> n
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.AddProgramActivity$6 -> it.angelic.soulissclient.g:
    it.angelic.soulissclient.AddProgramActivity this$0 -> a
    android.widget.Spinner val$spinnerInterval -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
it.angelic.soulissclient.AddProgramActivity$7 -> it.angelic.soulissclient.h:
    it.angelic.soulissclient.AddProgramActivity this$0 -> a
    android.widget.Spinner val$triggeredTypicalSpinner -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.AddProgramActivity$8 -> it.angelic.soulissclient.i:
    it.angelic.soulissclient.AddProgramActivity this$0 -> a
    android.widget.Button val$buttComparator -> b
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.AddProgramActivity$9 -> it.angelic.soulissclient.j:
    it.angelic.soulissclient.AddProgramActivity this$0 -> a
    android.widget.Spinner val$outputCommandSpinner -> b
    android.widget.RadioButton val$radioTimed -> c
    android.widget.TimePicker val$tp -> d
    android.widget.CheckBox val$checkboxRecursive -> e
    android.widget.Spinner val$spinnerInterval -> f
    android.widget.RadioButton val$radioPositional -> g
    android.widget.ToggleButton val$togglehomeaway -> h
    android.widget.RadioButton val$radioSensorial -> i
    android.widget.Spinner val$triggeredTypicalSpinner -> j
    android.widget.EditText val$et -> k
    android.widget.Button val$buttComparator -> l
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.AirConActivity -> it.angelic.soulissclient.AirConActivity:
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> m
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> n
    it.angelic.soulissclient.SoulissDataService mBoundService -> o
    boolean mIsBound -> p
    android.widget.Spinner functionSpinner -> a
    android.widget.Spinner fanSpiner -> b
    android.widget.TextView textviewTemperature -> c
    android.widget.TextView textviewPositional -> d
    android.widget.ToggleButton togSwirl -> e
    android.widget.ToggleButton togIon -> f
    android.widget.ToggleButton togEnergySave -> g
    android.widget.TextView textviewTriggered -> h
    android.widget.Button buttPlus -> i
    android.widget.Button buttMinus -> j
    android.widget.Button btOff -> k
    android.widget.Button btOn -> l
    it.angelic.soulissclient.typicals.SoulissTypical collected -> q
    it.angelic.soulissclient.typicals.SoulissTypical related -> r
    android.content.ServiceConnection mConnection -> s
    android.content.BroadcastReceiver soulissDataReceiver -> t
    void doBindService() -> a
    void doUnbindService() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onResume() -> onResume
    void onPause() -> onPause
    long buildIrCommand(java.lang.Integer) -> a
    long issueIrCommand(long) -> a
    void onDestroy() -> onDestroy
    short remapTemperature(int) -> a
    short demapTemperature(int) -> b
    void access$0(it.angelic.soulissclient.AirConActivity,it.angelic.soulissclient.SoulissDataService) -> a
    it.angelic.soulissclient.typicals.SoulissTypical access$1(it.angelic.soulissclient.AirConActivity) -> a
    void access$2(it.angelic.soulissclient.AirConActivity,it.angelic.soulissclient.typicals.SoulissTypical) -> a
    long access$3(it.angelic.soulissclient.AirConActivity,java.lang.Integer) -> a
    long access$4(it.angelic.soulissclient.AirConActivity,long) -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$5(it.angelic.soulissclient.AirConActivity) -> b
it.angelic.soulissclient.AirConActivity$1 -> it.angelic.soulissclient.k:
    it.angelic.soulissclient.AirConActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
it.angelic.soulissclient.AirConActivity$10 -> it.angelic.soulissclient.l:
    it.angelic.soulissclient.AirConActivity this$0 -> a
    long val$finalCommand -> b
    void run() -> run
it.angelic.soulissclient.AirConActivity$2 -> it.angelic.soulissclient.m:
    it.angelic.soulissclient.AirConActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.AirConActivity$3 -> it.angelic.soulissclient.n:
    it.angelic.soulissclient.AirConActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.AirConActivity$4 -> it.angelic.soulissclient.o:
    it.angelic.soulissclient.AirConActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.AirConActivity$5 -> it.angelic.soulissclient.p:
    it.angelic.soulissclient.AirConActivity this$0 -> a
    android.widget.AdapterView$OnItemSelectedListener val$lit -> b
    android.widget.AdapterView$OnItemSelectedListener val$lib -> c
    void run() -> run
it.angelic.soulissclient.AirConActivity$6 -> it.angelic.soulissclient.q:
    it.angelic.soulissclient.AirConActivity this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.AirConActivity$7 -> it.angelic.soulissclient.r:
    it.angelic.soulissclient.AirConActivity this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.AirConActivity$8 -> it.angelic.soulissclient.s:
    it.angelic.soulissclient.AirConActivity this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.AirConActivity$9 -> it.angelic.soulissclient.t:
    it.angelic.soulissclient.AirConActivity this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.Constants -> it.angelic.soulissclient.u:
    float[] roundedCorners -> a
    int versionNumber -> b
    java.text.SimpleDateFormat hourFormat -> c
    java.text.SimpleDateFormat yearFormat -> d
    java.text.DecimalFormat df -> e
    java.lang.String[] ROM -> f
    int[][] DIGITS -> g
    java.lang.String getTimeAgo(java.util.Calendar) -> a
    java.lang.String getScaledTime(long) -> a
    java.lang.String int2roman(int) -> a
it.angelic.soulissclient.LauncherActivity -> it.angelic.soulissclient.LauncherActivity:
    android.location.LocationManager locationManager -> b
    java.lang.String provider -> c
    android.widget.TextView coordinfo -> d
    android.widget.TextView homedist -> e
    android.widget.TextView basinfo -> f
    android.widget.TextView dbwarn -> g
    android.view.View dbwarnline -> h
    android.view.View posInfoLine -> i
    android.widget.TextView serviceInfoFoot -> j
    android.widget.TextView serviceInfo -> k
    android.view.View serviceinfoLine -> l
    android.view.View basinfoLine -> m
    android.os.Handler timeoutHandler -> n
    android.widget.Button soulissSceneBtn -> o
    android.widget.Button soulissManualBtn -> p
    android.widget.Button programsActivity -> q
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> r
    it.angelic.soulissclient.SoulissDataService mBoundService -> s
    boolean mIsBound -> t
    java.util.Timer autoUpdate -> u
    android.location.Geocoder geocoder -> v
    android.content.ServiceConnection mConnection -> w
    java.lang.Runnable timeExpired -> a
    android.content.BroadcastReceiver timeoutReceiver -> x
    android.content.BroadcastReceiver datareceiver -> y
    void doBindService() -> a
    void doUnbindService() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setHeadInfo() -> c
    void setDbInfo() -> d
    void setServiceInfo() -> e
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void access$0(it.angelic.soulissclient.LauncherActivity,it.angelic.soulissclient.SoulissDataService) -> a
    it.angelic.soulissclient.SoulissDataService access$1(it.angelic.soulissclient.LauncherActivity) -> a
    void access$2(it.angelic.soulissclient.LauncherActivity,boolean) -> a
    android.widget.TextView access$3(it.angelic.soulissclient.LauncherActivity) -> b
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$4(it.angelic.soulissclient.LauncherActivity) -> c
    android.os.Handler access$5(it.angelic.soulissclient.LauncherActivity) -> d
    void access$6(it.angelic.soulissclient.LauncherActivity) -> e
    void access$7(it.angelic.soulissclient.LauncherActivity) -> f
    void access$8(it.angelic.soulissclient.LauncherActivity) -> g
    android.location.Geocoder access$9(it.angelic.soulissclient.LauncherActivity) -> h
    android.widget.TextView access$10(it.angelic.soulissclient.LauncherActivity) -> i
    android.view.View access$11(it.angelic.soulissclient.LauncherActivity) -> j
it.angelic.soulissclient.LauncherActivity$1 -> it.angelic.soulissclient.v:
    it.angelic.soulissclient.LauncherActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
it.angelic.soulissclient.LauncherActivity$2 -> it.angelic.soulissclient.w:
    it.angelic.soulissclient.LauncherActivity this$0 -> a
    void run() -> run
it.angelic.soulissclient.LauncherActivity$3 -> it.angelic.soulissclient.x:
    it.angelic.soulissclient.LauncherActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.LauncherActivity$4 -> it.angelic.soulissclient.y:
    it.angelic.soulissclient.LauncherActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.LauncherActivity$5 -> it.angelic.soulissclient.z:
    it.angelic.soulissclient.LauncherActivity this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.LauncherActivity$6 -> it.angelic.soulissclient.aa:
    it.angelic.soulissclient.LauncherActivity this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.LauncherActivity$7 -> it.angelic.soulissclient.ab:
    it.angelic.soulissclient.LauncherActivity this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.LauncherActivity$8 -> it.angelic.soulissclient.ac:
    it.angelic.soulissclient.LauncherActivity this$0 -> a
    void run() -> run
    it.angelic.soulissclient.LauncherActivity access$0(it.angelic.soulissclient.LauncherActivity$8) -> a
it.angelic.soulissclient.LauncherActivity$8$1 -> it.angelic.soulissclient.ad:
    it.angelic.soulissclient.LauncherActivity$8 this$1 -> a
    void run() -> run
it.angelic.soulissclient.LauncherActivity$9 -> it.angelic.soulissclient.ae:
    it.angelic.soulissclient.LauncherActivity this$0 -> a
    double val$lat -> b
    double val$lng -> c
    float[] val$res -> d
    void run() -> run
    it.angelic.soulissclient.LauncherActivity access$0(it.angelic.soulissclient.LauncherActivity$9) -> a
it.angelic.soulissclient.LauncherActivity$9$1 -> it.angelic.soulissclient.af:
    it.angelic.soulissclient.LauncherActivity$9 this$1 -> a
    java.io.IOException val$e -> b
    void run() -> run
it.angelic.soulissclient.LauncherActivity$9$2 -> it.angelic.soulissclient.ag:
    it.angelic.soulissclient.LauncherActivity$9 this$1 -> a
    float[] val$res -> b
    java.lang.String val$ff -> c
    void run() -> run
it.angelic.soulissclient.ManualUDPTestActivity -> it.angelic.soulissclient.ManualUDPTestActivity:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> b
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> c
    android.widget.Button refreshButton -> d
    android.widget.Button stateRequestButton -> e
    android.widget.Button typreqButton -> f
    android.widget.Button healthButton -> g
    android.widget.Button GoButt -> h
    android.os.Handler timeoutHandler -> i
    android.widget.TextView errorText -> j
    android.content.BroadcastReceiver macacoRawDataReceiver -> k
    java.lang.Runnable timeExpired -> a
    android.content.BroadcastReceiver timeoutReceiver -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onResume() -> onResume
    void onPause() -> onPause
    android.os.Handler access$0(it.angelic.soulissclient.ManualUDPTestActivity) -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$1(it.angelic.soulissclient.ManualUDPTestActivity) -> b
    android.widget.Button access$2(it.angelic.soulissclient.ManualUDPTestActivity) -> c
    android.widget.TextView access$3(it.angelic.soulissclient.ManualUDPTestActivity) -> d
    android.widget.Button access$4(it.angelic.soulissclient.ManualUDPTestActivity) -> e
    android.widget.Button access$5(it.angelic.soulissclient.ManualUDPTestActivity) -> f
    android.widget.Button access$6(it.angelic.soulissclient.ManualUDPTestActivity) -> g
it.angelic.soulissclient.ManualUDPTestActivity$1 -> it.angelic.soulissclient.ah:
    it.angelic.soulissclient.ManualUDPTestActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.ManualUDPTestActivity$2 -> it.angelic.soulissclient.ai:
    it.angelic.soulissclient.ManualUDPTestActivity this$0 -> a
    void run() -> run
it.angelic.soulissclient.ManualUDPTestActivity$3 -> it.angelic.soulissclient.aj:
    it.angelic.soulissclient.ManualUDPTestActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.ManualUDPTestActivity$4 -> it.angelic.soulissclient.ak:
    it.angelic.soulissclient.ManualUDPTestActivity this$0 -> a
    android.widget.EditText val$editCmd -> b
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.ManualUDPTestActivity access$0(it.angelic.soulissclient.ManualUDPTestActivity$4) -> a
it.angelic.soulissclient.ManualUDPTestActivity$4$1 -> it.angelic.soulissclient.al:
    it.angelic.soulissclient.ManualUDPTestActivity$4 this$1 -> a
    void run() -> run
    it.angelic.soulissclient.ManualUDPTestActivity$4 access$0(it.angelic.soulissclient.ManualUDPTestActivity$4$1) -> a
it.angelic.soulissclient.ManualUDPTestActivity$4$1$1 -> it.angelic.soulissclient.am:
    it.angelic.soulissclient.ManualUDPTestActivity$4$1 this$2 -> a
    java.lang.StringBuilder val$ret -> b
    void run() -> run
it.angelic.soulissclient.ManualUDPTestActivity$5 -> it.angelic.soulissclient.an:
    it.angelic.soulissclient.ManualUDPTestActivity this$0 -> a
    android.widget.EditText val$editCmd -> b
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.ManualUDPTestActivity access$0(it.angelic.soulissclient.ManualUDPTestActivity$5) -> a
it.angelic.soulissclient.ManualUDPTestActivity$5$1 -> it.angelic.soulissclient.ao:
    it.angelic.soulissclient.ManualUDPTestActivity$5 this$1 -> a
    void run() -> run
    it.angelic.soulissclient.ManualUDPTestActivity$5 access$0(it.angelic.soulissclient.ManualUDPTestActivity$5$1) -> a
it.angelic.soulissclient.ManualUDPTestActivity$5$1$1 -> it.angelic.soulissclient.ap:
    it.angelic.soulissclient.ManualUDPTestActivity$5$1 this$2 -> a
    void run() -> run
it.angelic.soulissclient.ManualUDPTestActivity$6 -> it.angelic.soulissclient.aq:
    it.angelic.soulissclient.ManualUDPTestActivity this$0 -> a
    android.widget.EditText val$editCmd -> b
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.ManualUDPTestActivity access$0(it.angelic.soulissclient.ManualUDPTestActivity$6) -> a
it.angelic.soulissclient.ManualUDPTestActivity$6$1 -> it.angelic.soulissclient.ar:
    it.angelic.soulissclient.ManualUDPTestActivity$6 this$1 -> a
    int val$numof -> b
    void run() -> run
    it.angelic.soulissclient.ManualUDPTestActivity$6 access$0(it.angelic.soulissclient.ManualUDPTestActivity$6$1) -> a
it.angelic.soulissclient.ManualUDPTestActivity$6$1$1 -> it.angelic.soulissclient.as:
    it.angelic.soulissclient.ManualUDPTestActivity$6$1 this$2 -> a
    void run() -> run
it.angelic.soulissclient.ManualUDPTestActivity$7 -> it.angelic.soulissclient.at:
    it.angelic.soulissclient.ManualUDPTestActivity this$0 -> a
    android.widget.EditText val$editCmd -> b
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.ManualUDPTestActivity access$0(it.angelic.soulissclient.ManualUDPTestActivity$7) -> a
it.angelic.soulissclient.ManualUDPTestActivity$7$1 -> it.angelic.soulissclient.au:
    it.angelic.soulissclient.ManualUDPTestActivity$7 this$1 -> a
    void run() -> run
    it.angelic.soulissclient.ManualUDPTestActivity$7 access$0(it.angelic.soulissclient.ManualUDPTestActivity$7$1) -> a
it.angelic.soulissclient.ManualUDPTestActivity$7$1$1 -> it.angelic.soulissclient.av:
    it.angelic.soulissclient.ManualUDPTestActivity$7$1 this$2 -> a
    void run() -> run
it.angelic.soulissclient.ManualUDPTestActivity$8 -> it.angelic.soulissclient.aw:
    it.angelic.soulissclient.ManualUDPTestActivity this$0 -> a
    android.widget.EditText val$editCmd -> b
    android.widget.Spinner val$idspinner -> c
    android.widget.Spinner val$slotspinner -> d
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.ManualUDPTestActivity access$0(it.angelic.soulissclient.ManualUDPTestActivity$8) -> a
it.angelic.soulissclient.ManualUDPTestActivity$8$1 -> it.angelic.soulissclient.ax:
    it.angelic.soulissclient.ManualUDPTestActivity$8 this$1 -> a
    android.widget.Spinner val$idspinner -> b
    android.widget.Spinner val$slotspinner -> c
    android.widget.EditText val$editCmd -> d
    void run() -> run
    it.angelic.soulissclient.ManualUDPTestActivity$8 access$0(it.angelic.soulissclient.ManualUDPTestActivity$8$1) -> a
it.angelic.soulissclient.ManualUDPTestActivity$8$1$1 -> it.angelic.soulissclient.ay:
    it.angelic.soulissclient.ManualUDPTestActivity$8$1 this$2 -> a
    java.lang.String val$cmdOutput -> b
    void run() -> run
it.angelic.soulissclient.NodeDetailActivity -> it.angelic.soulissclient.NodeDetailActivity:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> n
    it.angelic.soulissclient.adapters.TypicalsListAdapter ta -> o
    it.angelic.soulissclient.db.SoulissDBHelper database -> p
    it.angelic.soulissclient.SoulissDataService mBoundService -> q
    android.content.ServiceConnection mConnection -> r
    it.angelic.soulissclient.model.SoulissNode collected -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void access$0(it.angelic.soulissclient.NodeDetailActivity,it.angelic.soulissclient.SoulissDataService) -> a
    it.angelic.soulissclient.adapters.TypicalsListAdapter access$1(it.angelic.soulissclient.NodeDetailActivity) -> a
    it.angelic.soulissclient.SoulissDataService access$2(it.angelic.soulissclient.NodeDetailActivity) -> b
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$3(it.angelic.soulissclient.NodeDetailActivity) -> c
    it.angelic.soulissclient.model.SoulissNode access$4(it.angelic.soulissclient.NodeDetailActivity) -> d
it.angelic.soulissclient.NodeDetailActivity$1 -> it.angelic.soulissclient.az:
    it.angelic.soulissclient.NodeDetailActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
it.angelic.soulissclient.NodeDetailActivity$2 -> it.angelic.soulissclient.ba:
    it.angelic.soulissclient.NodeDetailActivity this$0 -> a
    void run() -> run
it.angelic.soulissclient.NodesListActivity -> it.angelic.soulissclient.NodesListActivity:
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> o
    java.util.List goer -> n
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> p
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$0(it.angelic.soulissclient.NodesListActivity) -> a
it.angelic.soulissclient.NodesListActivity$1 -> it.angelic.soulissclient.bb:
    it.angelic.soulissclient.NodesListActivity this$0 -> a
    void run() -> run
it.angelic.soulissclient.PreferencesActivity -> it.angelic.soulissclient.PreferencesActivity:
    android.content.pm.PackageInfo packageInfo -> b
    java.lang.String strVersionName -> c
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> a
    android.content.BroadcastReceiver macacoRawDataReceiver -> d
    void onBuildHeaders(java.util.List) -> onBuildHeaders
    void AddResourceApiLessThan11(java.lang.String) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
it.angelic.soulissclient.PreferencesActivity$1 -> it.angelic.soulissclient.bc:
    it.angelic.soulissclient.PreferencesActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.PreferencesActivity$2 -> it.angelic.soulissclient.bd:
    it.angelic.soulissclient.PreferencesActivity this$0 -> a
    android.preference.Preference val$userIdx -> b
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
it.angelic.soulissclient.PreferencesActivity$3 -> it.angelic.soulissclient.be:
    it.angelic.soulissclient.PreferencesActivity this$0 -> a
    android.location.LocationManager val$locationManager -> b
    java.lang.String val$provider -> c
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
it.angelic.soulissclient.PreferencesActivity$4 -> it.angelic.soulissclient.bf:
    it.angelic.soulissclient.PreferencesActivity this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
it.angelic.soulissclient.ProgramListActivity -> it.angelic.soulissclient.ProgramListActivity:
    it.angelic.soulissclient.model.SoulissCommand[] programsArray -> b
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> a
    android.widget.ListView listaProgrammiView -> c
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> d
    it.angelic.soulissclient.adapters.ProgramListAdapter progsAdapter -> e
    android.widget.TextView tt -> f
    android.content.BroadcastReceiver datareceiver -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onPause() -> onPause
    void onResume() -> onResume
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDestroy() -> onDestroy
    it.angelic.soulissclient.db.SoulissDBHelper access$0(it.angelic.soulissclient.ProgramListActivity) -> a
    void access$1(it.angelic.soulissclient.ProgramListActivity,it.angelic.soulissclient.model.SoulissCommand[]) -> a
    it.angelic.soulissclient.model.SoulissCommand[] access$2(it.angelic.soulissclient.ProgramListActivity) -> b
    void access$3(it.angelic.soulissclient.ProgramListActivity,it.angelic.soulissclient.adapters.ProgramListAdapter) -> a
    android.widget.ListView access$4(it.angelic.soulissclient.ProgramListActivity) -> c
    it.angelic.soulissclient.adapters.ProgramListAdapter access$5(it.angelic.soulissclient.ProgramListActivity) -> d
it.angelic.soulissclient.ProgramListActivity$1 -> it.angelic.soulissclient.bg:
    it.angelic.soulissclient.ProgramListActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.ProgramListActivity$2 -> it.angelic.soulissclient.bh:
    it.angelic.soulissclient.ProgramListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
it.angelic.soulissclient.R -> it.angelic.soulissclient.bi:
it.angelic.soulissclient.R$styleable -> it.angelic.soulissclient.bj:
    int[] IconGallery -> IconGallery
    int IconGallery_android_galleryItemBackground -> IconGallery_android_galleryItemBackground
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_android_windowIsFloating -> SherlockTheme_android_windowIsFloating
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
it.angelic.soulissclient.RGBAdvancedActivity -> it.angelic.soulissclient.RGBAdvancedActivity:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> n
    it.angelic.soulissclient.typicals.SoulissTypical collected -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
it.angelic.soulissclient.RGBIrActivity -> it.angelic.soulissclient.RGBIrActivity:
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> n
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> o
    android.widget.Button buttPlus -> p
    android.widget.Button buttMinus -> q
    android.widget.Button btOff -> r
    android.widget.Button btOn -> s
    it.angelic.soulissclient.typicals.SoulissTypical collected -> t
    android.widget.Button btRed -> u
    android.widget.Button btRed2 -> v
    android.widget.Button btRed3 -> w
    android.widget.Button btRed4 -> x
    android.widget.Button btRed5 -> y
    android.widget.Button btGreen -> z
    android.widget.Button btGreen2 -> A
    android.widget.Button btGreen3 -> B
    android.widget.Button btGreen4 -> C
    android.widget.Button btGreen5 -> D
    android.widget.Button btBlu -> E
    android.widget.Button btBlu2 -> F
    android.widget.Button btBlu3 -> G
    android.widget.Button btBlu4 -> H
    android.widget.Button btBlu5 -> I
    android.widget.Button btWhite -> J
    android.widget.Button btFlash -> K
    android.widget.Button btFade -> L
    android.widget.Button btShoot -> M
    android.widget.Button btStrobo -> N
    android.content.BroadcastReceiver datareceiver -> O
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onResume() -> onResume
    void onPause() -> onPause
    void issueIrCommand(short) -> a
    void onDestroy() -> onDestroy
    it.angelic.soulissclient.typicals.SoulissTypical access$0(it.angelic.soulissclient.RGBIrActivity) -> a
    void access$1(it.angelic.soulissclient.RGBIrActivity,it.angelic.soulissclient.typicals.SoulissTypical) -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$2(it.angelic.soulissclient.RGBIrActivity) -> b
it.angelic.soulissclient.RGBIrActivity$1 -> it.angelic.soulissclient.bk:
    it.angelic.soulissclient.RGBIrActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.RGBIrActivity$2 -> it.angelic.soulissclient.bl:
    it.angelic.soulissclient.RGBIrActivity this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.RGBIrActivity$3 -> it.angelic.soulissclient.bm:
    it.angelic.soulissclient.RGBIrActivity this$0 -> a
    short val$val -> b
    void run() -> run
it.angelic.soulissclient.SceneDetailActivity -> it.angelic.soulissclient.SceneDetailActivity:
    it.angelic.soulissclient.model.SoulissScene collected -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> b
    android.widget.ListView listaComandiView -> c
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> d
    it.angelic.soulissclient.adapters.SceneCommandListAdapter ta -> e
    android.widget.TextView upda -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void createHeader() -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
it.angelic.soulissclient.SceneDetailActivity$1 -> it.angelic.soulissclient.bn:
    it.angelic.soulissclient.SceneDetailActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
it.angelic.soulissclient.SceneListActivity -> it.angelic.soulissclient.SceneListActivity:
    it.angelic.soulissclient.model.SoulissScene[] scenesArray -> b
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> a
    android.widget.ListView listaScenesView -> c
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> d
    it.angelic.soulissclient.adapters.SceneListAdapter progsAdapter -> e
    android.widget.TextView tt -> f
    android.content.BroadcastReceiver datareceiver -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> a
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDestroy() -> onDestroy
    it.angelic.soulissclient.db.SoulissDBHelper access$0(it.angelic.soulissclient.SceneListActivity) -> a
    void access$1(it.angelic.soulissclient.SceneListActivity,it.angelic.soulissclient.model.SoulissScene[]) -> a
    it.angelic.soulissclient.model.SoulissScene[] access$2(it.angelic.soulissclient.SceneListActivity) -> b
    void access$3(it.angelic.soulissclient.SceneListActivity,it.angelic.soulissclient.adapters.SceneListAdapter) -> a
    android.widget.ListView access$4(it.angelic.soulissclient.SceneListActivity) -> c
    it.angelic.soulissclient.adapters.SceneListAdapter access$5(it.angelic.soulissclient.SceneListActivity) -> d
it.angelic.soulissclient.SceneListActivity$1 -> it.angelic.soulissclient.bo:
    it.angelic.soulissclient.SceneListActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.SceneListActivity$2 -> it.angelic.soulissclient.bp:
    it.angelic.soulissclient.SceneListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
it.angelic.soulissclient.SensorDetailActivity -> it.angelic.soulissclient.SensorDetailActivity:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> n
    it.angelic.soulissclient.adapters.TypicalsListAdapter ta -> o
    it.angelic.soulissclient.SoulissDataService mBoundService -> p
    android.content.ServiceConnection mConnection -> q
    it.angelic.soulissclient.typicals.SoulissTypical collected -> r
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void access$0(it.angelic.soulissclient.SensorDetailActivity,it.angelic.soulissclient.SoulissDataService) -> a
    it.angelic.soulissclient.adapters.TypicalsListAdapter access$1(it.angelic.soulissclient.SensorDetailActivity) -> a
    it.angelic.soulissclient.SoulissDataService access$2(it.angelic.soulissclient.SensorDetailActivity) -> b
it.angelic.soulissclient.SensorDetailActivity$1 -> it.angelic.soulissclient.bq:
    it.angelic.soulissclient.SensorDetailActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
it.angelic.soulissclient.SoulissClient -> it.angelic.soulissclient.SoulissClient:
    long serialVersionUID -> serialVersionUID
    android.content.Context context -> a
    android.util.DisplayMetrics metrics -> b
    int displayWidth -> c
    int displayHeight -> d
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> e
    android.content.Context getAppContext() -> a
    int getDisplayWidth() -> b
    void setBackground(android.view.View,android.view.WindowManager) -> a
    void onCreate() -> onCreate
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper getOpzioni() -> c
    void setOpzioni(it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
it.angelic.soulissclient.SoulissDataService -> it.angelic.soulissclient.SoulissDataService:
    android.os.IBinder mBinder -> b
    android.location.LocationManager locationManager -> c
    java.util.Calendar lastupd -> d
    android.os.Handler mHandler -> e
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opts -> f
    it.angelic.soulissclient.db.SoulissDBHelper db -> g
    java.lang.String provider -> h
    float homeDist -> i
    android.app.NotificationManager nm -> a
    java.lang.String cached -> j
    java.lang.Thread udpThread -> k
    java.lang.Runnable mUpdateSoulissRunnable -> l
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void reschedule() -> a
    java.util.Calendar getLastupd() -> b
    void setLastupd(java.util.Calendar) -> a
    void logThings(java.util.Map) -> a
    void sendNotification(android.content.Context,java.lang.String,java.lang.String,int) -> a
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$0(it.angelic.soulissclient.SoulissDataService) -> a
    void access$1(it.angelic.soulissclient.SoulissDataService,it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
    void access$2(it.angelic.soulissclient.SoulissDataService,java.lang.String) -> a
    java.lang.String access$3(it.angelic.soulissclient.SoulissDataService) -> b
    float access$4(it.angelic.soulissclient.SoulissDataService) -> c
    it.angelic.soulissclient.db.SoulissDBHelper access$5(it.angelic.soulissclient.SoulissDataService) -> d
    void access$6(it.angelic.soulissclient.SoulissDataService,java.util.Map) -> a
    android.os.Handler access$7(it.angelic.soulissclient.SoulissDataService) -> e
    java.lang.Runnable access$8(it.angelic.soulissclient.SoulissDataService) -> f
    android.location.LocationManager access$9(it.angelic.soulissclient.SoulissDataService) -> g
    java.lang.String access$10(it.angelic.soulissclient.SoulissDataService) -> h
it.angelic.soulissclient.SoulissDataService$1 -> it.angelic.soulissclient.br:
    it.angelic.soulissclient.SoulissDataService this$0 -> a
    void run() -> run
    void processPositionalPrograms(float) -> a
    it.angelic.soulissclient.SoulissDataService access$0(it.angelic.soulissclient.SoulissDataService$1) -> a
it.angelic.soulissclient.SoulissDataService$1$1 -> it.angelic.soulissclient.bs:
    it.angelic.soulissclient.SoulissDataService$1 this$1 -> a
    void run() -> run
it.angelic.soulissclient.SoulissDataService$1$2 -> it.angelic.soulissclient.bt:
    it.angelic.soulissclient.SoulissDataService$1 this$1 -> a
    byte val$nodesNum -> b
    void run() -> run
    it.angelic.soulissclient.SoulissDataService$1 access$0(it.angelic.soulissclient.SoulissDataService$1$2) -> a
it.angelic.soulissclient.SoulissDataService$1$2$1 -> it.angelic.soulissclient.bu:
    it.angelic.soulissclient.SoulissDataService$1$2 this$2 -> a
    byte val$nodesNum -> b
    void run() -> run
it.angelic.soulissclient.SoulissDataService$1$3 -> it.angelic.soulissclient.bv:
    it.angelic.soulissclient.SoulissDataService$1 this$1 -> a
    it.angelic.soulissclient.model.SoulissCommand val$cmd -> b
    void run() -> run
it.angelic.soulissclient.SoulissDataService$1$4 -> it.angelic.soulissclient.bw:
    it.angelic.soulissclient.SoulissDataService$1 this$1 -> a
    it.angelic.soulissclient.model.SoulissCommand val$cmd -> b
    void run() -> run
it.angelic.soulissclient.SoulissDataService$LocalBinder -> it.angelic.soulissclient.bx:
    it.angelic.soulissclient.SoulissDataService this$0 -> a
    it.angelic.soulissclient.SoulissDataService getService() -> a
it.angelic.soulissclient.SoulissWidget -> it.angelic.soulissclient.SoulissWidget:
    android.os.Handler handler -> a
    android.content.SharedPreferences customSharedPreference -> b
    void forcedUpdate(android.content.Context,android.appwidget.AppWidgetManager,int) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    android.os.Handler access$0(it.angelic.soulissclient.SoulissWidget) -> a
    android.content.SharedPreferences access$1(it.angelic.soulissclient.SoulissWidget) -> b
it.angelic.soulissclient.SoulissWidget$1 -> it.angelic.soulissclient.by:
    it.angelic.soulissclient.db.SoulissDBHelper db -> b
    it.angelic.soulissclient.SoulissWidget this$0 -> a
    android.content.Context val$context -> c
    int val$node -> d
    int val$slot -> e
    long val$cmd -> f
    android.widget.RemoteViews val$updateViews -> g
    java.lang.String val$name -> h
    int val$got -> i
    android.appwidget.AppWidgetManager val$awm -> j
    void run() -> run
    it.angelic.soulissclient.SoulissWidget access$0(it.angelic.soulissclient.SoulissWidget$1) -> a
it.angelic.soulissclient.SoulissWidget$1$1 -> it.angelic.soulissclient.bz:
    it.angelic.soulissclient.SoulissWidget$1 this$1 -> a
    android.widget.RemoteViews val$updateViews -> b
    it.angelic.soulissclient.model.SoulissCommand val$cmdd -> c
    java.lang.String val$name -> d
    it.angelic.soulissclient.typicals.SoulissTypical val$tgt -> e
    android.content.Context val$context -> f
    int val$got -> g
    void run() -> run
it.angelic.soulissclient.SoulissWidget$1$2 -> it.angelic.soulissclient.ca:
    it.angelic.soulissclient.SoulissWidget$1 this$1 -> a
    android.widget.RemoteViews val$updateViews -> b
    it.angelic.soulissclient.model.SoulissCommand val$cmdd -> c
    java.lang.String val$name -> d
    it.angelic.soulissclient.typicals.SoulissTypical val$tgt -> e
    android.content.Context val$context -> f
    java.lang.String val$res -> g
    android.appwidget.AppWidgetManager val$awm -> h
    int val$got -> i
    void run() -> run
it.angelic.soulissclient.SoulissWidgetConfig -> it.angelic.soulissclient.SoulissWidgetConfig:
    it.angelic.soulissclient.model.SoulissNode[] nodiArray -> a
    android.widget.Button configOkButton -> b
    int mAppWidgetId -> c
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> d
    android.widget.Spinner outputNodeSpinner -> e
    android.widget.Spinner outputCommandSpinner -> f
    android.widget.Spinner outputTypicalSpinner -> g
    android.widget.Button configCancelButton -> h
    android.widget.EditText widgetLabel -> i
    android.view.View$OnClickListener configOkButtonOnClickListener -> j
    android.view.View$OnClickListener configCancelButtonOnClickListener -> k
    void onCreate(android.os.Bundle) -> onCreate
    void fillNodeSpinner(android.widget.Spinner) -> a
    void setTypicalSpinner(android.widget.Spinner,it.angelic.soulissclient.model.SoulissNode) -> a
    void fillCommandSpinner(android.widget.Spinner,it.angelic.soulissclient.typicals.SoulissTypical) -> a
    android.widget.Spinner access$0(it.angelic.soulissclient.SoulissWidgetConfig) -> a
    int access$1(it.angelic.soulissclient.SoulissWidgetConfig) -> b
    android.widget.Spinner access$2(it.angelic.soulissclient.SoulissWidgetConfig) -> c
    android.widget.Spinner access$3(it.angelic.soulissclient.SoulissWidgetConfig) -> d
    android.widget.EditText access$4(it.angelic.soulissclient.SoulissWidgetConfig) -> e
    it.angelic.soulissclient.model.SoulissNode[] access$5(it.angelic.soulissclient.SoulissWidgetConfig) -> f
    void access$6(it.angelic.soulissclient.SoulissWidgetConfig,android.widget.Spinner,it.angelic.soulissclient.model.SoulissNode) -> a
    void access$7(it.angelic.soulissclient.SoulissWidgetConfig,android.widget.Spinner,it.angelic.soulissclient.typicals.SoulissTypical) -> a
it.angelic.soulissclient.SoulissWidgetConfig$1 -> it.angelic.soulissclient.cb:
    android.content.SharedPreferences customSharedPreference -> b
    it.angelic.soulissclient.SoulissWidgetConfig this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.SoulissWidgetConfig$2 -> it.angelic.soulissclient.cc:
    it.angelic.soulissclient.SoulissWidgetConfig this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.SoulissWidgetConfig$3 -> it.angelic.soulissclient.cd:
    it.angelic.soulissclient.SoulissWidgetConfig this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.SoulissWidgetConfig$4 -> it.angelic.soulissclient.ce:
    it.angelic.soulissclient.SoulissWidgetConfig this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.Typical1nDetail -> it.angelic.soulissclient.Typical1nDetail:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> n
    it.angelic.soulissclient.typicals.SoulissTypical collected -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
it.angelic.soulissclient.adapters.NodesListAdapter -> it.angelic.soulissclient.a.a:
    android.view.LayoutInflater mInflater -> b
    android.content.Context context -> c
    it.angelic.soulissclient.model.SoulissNode[] nodi -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void setNodes(it.angelic.soulissclient.model.SoulissNode[]) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
it.angelic.soulissclient.adapters.NodesListAdapter$NodeViewHolder -> it.angelic.soulissclient.a.b:
    android.widget.TextView text -> a
    android.widget.TextView textTyp -> b
    android.widget.TextView textHlt -> c
    android.widget.ProgressBar hlt -> d
    android.widget.ImageView image -> e
    it.angelic.soulissclient.model.SoulissNode data -> f
    int imageRes -> g
it.angelic.soulissclient.adapters.ProgramListAdapter -> it.angelic.soulissclient.a.c:
    android.view.LayoutInflater mInflater -> c
    android.content.Context context -> d
    it.angelic.soulissclient.model.SoulissCommand[] programmi -> a
    android.util.SparseArray triggers -> b
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
it.angelic.soulissclient.adapters.ProgramListAdapter$CommandViewHolder -> it.angelic.soulissclient.a.d:
    android.view.View evidenza -> a
    android.widget.TextView textCmd -> b
    android.widget.TextView textCmdWhen -> c
    android.widget.TextView textCmdInfo -> d
    android.widget.ImageView image -> e
    it.angelic.soulissclient.model.SoulissCommand data -> f
it.angelic.soulissclient.adapters.SceneCommandListAdapter -> it.angelic.soulissclient.a.e:
    android.view.LayoutInflater mInflater -> b
    android.content.Context context -> c
    it.angelic.soulissclient.model.SoulissCommand[] comandiScena -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
it.angelic.soulissclient.adapters.SceneCommandListAdapter$CommandViewHolder -> it.angelic.soulissclient.a.f:
    android.view.View evidenza -> a
    android.widget.TextView textCmd -> b
    android.widget.TextView textCmdWhen -> c
    android.widget.TextView textCmdInfo -> d
    android.widget.ImageView image -> e
    it.angelic.soulissclient.model.SoulissCommand data -> f
it.angelic.soulissclient.adapters.SceneListAdapter -> it.angelic.soulissclient.a.g:
    android.view.LayoutInflater mInflater -> b
    android.content.Context context -> c
    it.angelic.soulissclient.model.SoulissScene[] scene -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setScenes(it.angelic.soulissclient.model.SoulissScene[]) -> a
it.angelic.soulissclient.adapters.SceneListAdapter$SceneViewHolder -> it.angelic.soulissclient.a.h:
    android.widget.TextView textCmd -> a
    android.widget.TextView textCmdWhen -> b
    android.widget.TextView textCmdInfo -> c
    android.widget.ImageView image -> d
    it.angelic.soulissclient.model.SoulissScene data -> e
it.angelic.soulissclient.adapters.SoulissIconAdapter -> it.angelic.soulissclient.a.i:
    int mGalleryItemBackground -> a
    android.content.Context mContext -> b
    java.lang.Integer[] mImageIds -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    int getItemResId(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
it.angelic.soulissclient.adapters.TypicalsListAdapter -> it.angelic.soulissclient.a.j:
    android.view.LayoutInflater mInflater -> c
    android.content.Context context -> d
    it.angelic.soulissclient.typicals.SoulissTypical[] tipici -> e
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> f
    android.content.Intent parentIntent -> a
    it.angelic.soulissclient.SoulissDataService mBoundService -> b
    void setTypicals(it.angelic.soulissclient.typicals.SoulissTypical[]) -> a
    void setmBoundService(it.angelic.soulissclient.SoulissDataService) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
it.angelic.soulissclient.adapters.TypicalsListAdapter$TypicalViewHolder -> it.angelic.soulissclient.a.k:
    android.widget.TextView textStatus -> a
    android.widget.TextView textStatusVal -> b
    android.widget.TextView textslot -> c
    android.widget.TextView textUpdated -> d
    android.widget.LinearLayout linearActionsLayout -> e
    android.widget.ImageView image -> f
    it.angelic.soulissclient.typicals.SoulissTypical data -> g
it.angelic.soulissclient.db.SoulissCommandDTO -> it.angelic.soulissclient.b.a:
    long serialVersionUID -> serialVersionUID
    java.lang.Long commandId -> a
    short nodeId -> b
    short slot -> c
    java.util.Calendar scheduledTime -> d
    java.util.Calendar executedTime -> e
    long command -> f
    java.lang.Integer sceneId -> g
    int interval -> h
    int type -> i
    long persistCommand(it.angelic.soulissclient.db.SoulissDBHelper) -> a
    long getProgramId() -> a
    void setCommandId(long) -> a
    short getNodeId() -> b
    void setNodeId(short) -> a
    short getSlot() -> c
    void setSlot(short) -> b
    java.util.Calendar getScheduledTime() -> d
    void setScheduledTime(java.util.Calendar) -> a
    java.util.Calendar getExecutedTime() -> e
    void setExecutedTime(java.util.Calendar) -> b
    long getCommand() -> f
    void setCommand(long) -> b
    int getSceneId() -> g
    void setSceneId(java.lang.Integer) -> a
    int getInterval() -> h
    void setInterval(int) -> a
    int getType() -> i
    void setType(int) -> b
it.angelic.soulissclient.db.SoulissDB -> it.angelic.soulissclient.b.b:
    java.lang.String[] ALLCOLUMNS_NODES -> a
    java.lang.String[] ALLCOLUMNS_TYPICALS -> b
    java.lang.String[] ALLCOLUMNS_COMMANDS -> c
    java.lang.String[] ALLCOLUMNS_TRIGGERS -> d
    java.lang.String[] ALLCOLUMNS_LOGS -> e
    java.lang.String[] ALLCOLUMNS_SCENES -> f
    android.content.Context context -> g
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
it.angelic.soulissclient.db.SoulissDBHelper -> it.angelic.soulissclient.b.c:
    android.database.sqlite.SQLiteDatabase database -> a
    it.angelic.soulissclient.db.SoulissDB soulissDatabase -> b
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opts -> c
    android.database.sqlite.SQLiteDatabase getDatabase() -> a
    void open() -> b
    void close() -> c
    int createOrUpdateNode(it.angelic.soulissclient.model.SoulissNode) -> a
    int createOrUpdateScene(it.angelic.soulissclient.model.SoulissScene) -> a
    void logTypical(it.angelic.soulissclient.typicals.SoulissTypical) -> a
    it.angelic.soulissclient.model.SoulissNode getSoulissNode(int) -> a
    java.util.List getUniqueTypicals(it.angelic.soulissclient.model.SoulissNode) -> b
    java.util.List getNodeTypicals(it.angelic.soulissclient.model.SoulissNode) -> c
    java.util.HashMap getHistoryTypicalLogs(it.angelic.soulissclient.typicals.SoulissTypical,int) -> a
    android.util.SparseArray getGroupedTypicalLogs(it.angelic.soulissclient.typicals.SoulissTypical,java.lang.String,int) -> a
    it.angelic.soulissclient.typicals.SoulissTypical getSoulissTypical(int,short) -> a
    it.angelic.soulissclient.db.SoulissTriggerDTO getSoulissTrigger(long) -> a
    int deleteCommand(it.angelic.soulissclient.model.SoulissCommand) -> a
    int truncateImportTables() -> d
    int deleteScene(it.angelic.soulissclient.model.SoulissScene) -> b
    java.util.List getAllNodes() -> e
    java.util.List getAllTriggers(android.content.Context) -> a
    android.util.SparseArray getTriggerMap(android.content.Context) -> b
    java.util.LinkedList getUnexecutedCommands(android.content.Context) -> c
    java.util.ArrayList getSceneCommands(android.content.Context,int) -> a
    java.util.LinkedList getScenes(android.content.Context) -> d
    java.util.LinkedList getPositionalPrograms(android.content.Context) -> e
it.angelic.soulissclient.db.SoulissDBLowHelper -> it.angelic.soulissclient.b.d:
    int refreshNodeHealths(java.util.ArrayList,int) -> a
    int createOrUpdateStructure(int,int) -> a
it.angelic.soulissclient.db.SoulissGraphData -> it.angelic.soulissclient.b.e:
    double average -> a
    double max -> b
    double min -> c
    int key -> d
it.angelic.soulissclient.db.SoulissHistoryGraphData -> it.angelic.soulissclient.b.f:
    double average -> a
    double max -> b
    double min -> c
    java.util.Date key -> d
it.angelic.soulissclient.db.SoulissLogDTO -> it.angelic.soulissclient.b.g:
    java.lang.Long logId -> a
    short nodeId -> b
    short slot -> c
    short typical -> d
    float logValue -> e
    java.util.Calendar logTime -> f
    long persist() -> a
    void setLogId(java.lang.Long) -> a
    void setNodeId(short) -> a
    void setSlot(short) -> b
    void setTypical(short) -> c
    void setLogValue(float) -> a
    void setLogTime(java.util.Calendar) -> a
it.angelic.soulissclient.db.SoulissTriggerDTO -> it.angelic.soulissclient.b.h:
    long serialVersionUID -> serialVersionUID
    long triggerId -> a
    java.lang.String op -> b
    short inputNodeId -> c
    short inputSlotlot -> d
    int activated -> e
    long commandId -> f
    int threshVal -> g
    void setActive(int) -> b
    int getActive() -> h
    void setActive(boolean) -> a
    boolean isActivated() -> a
    long getTriggerId() -> b
    void setTriggerId(long) -> a
    java.lang.String getOp() -> c
    void setOp(java.lang.String) -> a
    short getInputNodeId() -> d
    void setInputNodeId(short) -> a
    short getInputSlotlot() -> e
    void setInputSlot(short) -> b
    long getCommandId() -> f
    void setCommandId(long) -> b
    int getThreshVal() -> g
    void setThreshVal(int) -> a
    it.angelic.soulissclient.db.SoulissTriggerDTO persist(it.angelic.soulissclient.db.SoulissDBHelper) -> a
it.angelic.soulissclient.db.SoulissTypicalDTO -> it.angelic.soulissclient.b.i:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> a
    short nodeId -> b
    short slot -> c
    short typical -> d
    short output -> e
    int iconId -> f
    short inputCommand -> g
    java.util.Calendar refreshedAt -> h
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int persist() -> a
    int refresh() -> b
    java.lang.String getName() -> c
    short getNodeId() -> d
    short getOutput() -> e
    java.util.Calendar getRefreshedAt() -> f
    short getSlot() -> g
    short getTypical() -> h
    void setInput(byte) -> a
    void setName(java.lang.String) -> a
    void setNodeId(short) -> a
    void setOutput(short) -> b
    void setRefreshedAt(java.util.Calendar) -> a
    void setSlot(short) -> c
    void setTypical(short) -> d
    int getIconId() -> i
    void setIconId(int) -> a
    java.lang.String getTypicalDec() -> j
it.angelic.soulissclient.fragments.NodeDetailFragment -> it.angelic.soulissclient.fragments.a:
    it.angelic.soulissclient.model.SoulissNode collected -> Y
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> Z
    android.widget.ListView listaTypicalsView -> aa
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> ab
    java.util.Timer autoUpdate -> ac
    android.widget.ProgressBar par -> ad
    android.widget.TextView tt -> ae
    it.angelic.soulissclient.adapters.TypicalsListAdapter ta -> af
    android.widget.TextView upda -> ag
    it.angelic.soulissclient.SoulissDataService mBoundService -> ah
    boolean mIsBound -> ai
    android.content.ServiceConnection mConnection -> aj
    android.widget.ImageView nodeic -> ak
    android.os.Handler timeoutHandler -> al
    boolean mDualPane -> am
    android.content.BroadcastReceiver datareceiver -> an
    java.lang.Runnable timeExpired -> X
    android.content.BroadcastReceiver timeoutReceiver -> ao
    int getShownIndex() -> C
    it.angelic.soulissclient.fragments.NodeDetailFragment newInstance(int,it.angelic.soulissclient.model.SoulissNode) -> a
    void doBindService() -> D
    void doUnbindService() -> E
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> e
    void onStart() -> j
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void showDetails(int,it.angelic.soulissclient.typicals.SoulissTypical) -> a
    void refreshHeader() -> F
    void createHeader() -> G
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onResume() -> k
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onPause() -> l
    void access$0(it.angelic.soulissclient.fragments.NodeDetailFragment,it.angelic.soulissclient.SoulissDataService) -> a
    it.angelic.soulissclient.adapters.TypicalsListAdapter access$1(it.angelic.soulissclient.fragments.NodeDetailFragment) -> a
    it.angelic.soulissclient.SoulissDataService access$2(it.angelic.soulissclient.fragments.NodeDetailFragment) -> b
    android.os.Handler access$3(it.angelic.soulissclient.fragments.NodeDetailFragment) -> c
    android.widget.ListView access$4(it.angelic.soulissclient.fragments.NodeDetailFragment) -> d
    it.angelic.soulissclient.db.SoulissDBHelper access$5(it.angelic.soulissclient.fragments.NodeDetailFragment) -> e
    it.angelic.soulissclient.model.SoulissNode access$6(it.angelic.soulissclient.fragments.NodeDetailFragment) -> f
    void access$7(it.angelic.soulissclient.fragments.NodeDetailFragment,it.angelic.soulissclient.model.SoulissNode) -> a
    void access$8(it.angelic.soulissclient.fragments.NodeDetailFragment) -> g
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$9(it.angelic.soulissclient.fragments.NodeDetailFragment) -> h
    void access$10(it.angelic.soulissclient.fragments.NodeDetailFragment,int,it.angelic.soulissclient.typicals.SoulissTypical) -> a
it.angelic.soulissclient.fragments.NodeDetailFragment$1 -> it.angelic.soulissclient.fragments.b:
    it.angelic.soulissclient.fragments.NodeDetailFragment this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
it.angelic.soulissclient.fragments.NodeDetailFragment$2 -> it.angelic.soulissclient.fragments.c:
    it.angelic.soulissclient.fragments.NodeDetailFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.fragments.NodeDetailFragment$3 -> it.angelic.soulissclient.fragments.d:
    it.angelic.soulissclient.fragments.NodeDetailFragment this$0 -> a
    void run() -> run
it.angelic.soulissclient.fragments.NodeDetailFragment$4 -> it.angelic.soulissclient.fragments.e:
    it.angelic.soulissclient.fragments.NodeDetailFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.fragments.NodeDetailFragment$5 -> it.angelic.soulissclient.fragments.f:
    it.angelic.soulissclient.fragments.NodeDetailFragment this$0 -> a
    void run() -> run
it.angelic.soulissclient.fragments.NodeDetailFragment$6 -> it.angelic.soulissclient.fragments.g:
    it.angelic.soulissclient.fragments.NodeDetailFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
it.angelic.soulissclient.fragments.NodeDetailFragment$7 -> it.angelic.soulissclient.fragments.h:
    it.angelic.soulissclient.fragments.NodeDetailFragment this$0 -> a
    void run() -> run
    it.angelic.soulissclient.fragments.NodeDetailFragment access$0(it.angelic.soulissclient.fragments.NodeDetailFragment$7) -> a
it.angelic.soulissclient.fragments.NodeDetailFragment$7$1 -> it.angelic.soulissclient.fragments.i:
    it.angelic.soulissclient.fragments.NodeDetailFragment$7 this$1 -> a
    void run() -> run
it.angelic.soulissclient.fragments.NodesListFragment -> it.angelic.soulissclient.fragments.NodesListFragment:
    it.angelic.soulissclient.model.SoulissNode[] nodiArray -> Z
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> X
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> aa
    it.angelic.soulissclient.adapters.NodesListAdapter nodesAdapter -> ab
    int mCurCheckPosition -> Y
    java.util.Timer autoUpdate -> ac
    android.widget.TextView tt -> ad
    boolean mDualPane -> ae
    android.widget.TextView textHeadListInfo -> af
    android.content.BroadcastReceiver datareceiver -> ag
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> e
    void showDetails(int) -> b
    void onSaveInstanceState(android.os.Bundle) -> g
    void onStart() -> j
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void onPause() -> l
    void onResume() -> k
    void onDestroy() -> o
    it.angelic.soulissclient.db.SoulissDBHelper access$0(it.angelic.soulissclient.fragments.NodesListFragment) -> a
    void access$1(it.angelic.soulissclient.fragments.NodesListFragment,it.angelic.soulissclient.model.SoulissNode[]) -> a
    it.angelic.soulissclient.model.SoulissNode[] access$2(it.angelic.soulissclient.fragments.NodesListFragment) -> b
    it.angelic.soulissclient.adapters.NodesListAdapter access$3(it.angelic.soulissclient.fragments.NodesListFragment) -> c
    void access$4(it.angelic.soulissclient.fragments.NodesListFragment,int) -> a
it.angelic.soulissclient.fragments.NodesListFragment$1 -> it.angelic.soulissclient.fragments.j:
    it.angelic.soulissclient.fragments.NodesListFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.fragments.NodesListFragment$2 -> it.angelic.soulissclient.fragments.k:
    it.angelic.soulissclient.fragments.NodesListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
it.angelic.soulissclient.fragments.NodesListFragment$3 -> it.angelic.soulissclient.fragments.l:
    it.angelic.soulissclient.fragments.NodesListFragment this$0 -> a
    void run() -> run
it.angelic.soulissclient.fragments.NodesListFragment$4 -> it.angelic.soulissclient.fragments.m:
    it.angelic.soulissclient.fragments.NodesListFragment this$0 -> a
    void run() -> run
    it.angelic.soulissclient.fragments.NodesListFragment access$0(it.angelic.soulissclient.fragments.NodesListFragment$4) -> a
it.angelic.soulissclient.fragments.NodesListFragment$4$1 -> it.angelic.soulissclient.fragments.n:
    it.angelic.soulissclient.fragments.NodesListFragment$4 this$1 -> a
    void run() -> run
it.angelic.soulissclient.fragments.RGBAdvancedFragment -> it.angelic.soulissclient.fragments.o:
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> P
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> Q
    android.widget.Button buttPlus -> R
    android.widget.Button buttMinus -> S
    android.widget.Button btOff -> T
    android.widget.Button btOn -> U
    it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB collected -> V
    android.widget.Button btWhite -> W
    android.widget.Button btFlash -> X
    android.widget.Button btSleep -> Y
    int color -> Z
    it.angelic.soulissclient.fragments.RGBAdvancedFragment$OnColorChangedListener dialogColorChangedListener -> aa
    android.widget.RelativeLayout colorSwitchRelativeLayout -> ab
    com.pheelicks.visualizer.VisualizerView mVisualizerView -> ac
    android.widget.CheckBox checkMusic -> ad
    boolean continueIncrementing -> ae
    boolean continueDecrementing -> af
    it.angelic.soulissclient.fragments.RGBAdvancedFragment$ColorPickerView cpv -> ag
    android.widget.ToggleButton togMulticast -> ah
    android.content.BroadcastReceiver datareceiver -> ai
    void startIncrementing(java.lang.Short) -> a
    void stopIncrementing() -> B
    boolean isIncrementing() -> C
    void startDecrementing(java.lang.Short) -> b
    void stopDecrementing() -> D
    void setIsIncrementing(boolean) -> c
    boolean isDecrementing() -> E
    void setIsDecrementing(boolean) -> d
    void onActivityCreated(android.os.Bundle) -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void addBarGraphRenderers() -> F
    it.angelic.soulissclient.fragments.RGBAdvancedFragment newInstance(int,it.angelic.soulissclient.typicals.SoulissTypical) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onResume() -> k
    void onPause() -> l
    void onDestroy() -> o
    int ave(int,int,float) -> a
    int interpColor(int[],float) -> b
    void issueIrCommand(short,int,int,int,boolean) -> a
    it.angelic.soulissclient.db.SoulissDBHelper access$0(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> a
    it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB access$1(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> b
    void access$2(it.angelic.soulissclient.fragments.RGBAdvancedFragment,it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB) -> a
    it.angelic.soulissclient.fragments.RGBAdvancedFragment$ColorPickerView access$3(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> c
    android.widget.RelativeLayout access$4(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> d
    it.angelic.soulissclient.fragments.RGBAdvancedFragment$OnColorChangedListener access$5(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> e
    int access$6(int[],float) -> a
    boolean access$7(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> f
    int access$8(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> g
    android.widget.ToggleButton access$9(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> h
    boolean access$10(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> i
    void access$11(it.angelic.soulissclient.fragments.RGBAdvancedFragment,java.lang.Short) -> a
    void access$12(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> j
    void access$13(it.angelic.soulissclient.fragments.RGBAdvancedFragment,java.lang.Short) -> b
    void access$14(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> k
    com.pheelicks.visualizer.VisualizerView access$15(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> l
    void access$16(it.angelic.soulissclient.fragments.RGBAdvancedFragment) -> m
    void access$17(it.angelic.soulissclient.fragments.RGBAdvancedFragment,int) -> a
it.angelic.soulissclient.fragments.RGBAdvancedFragment$1 -> it.angelic.soulissclient.fragments.p:
    it.angelic.soulissclient.fragments.RGBAdvancedFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.fragments.RGBAdvancedFragment$2 -> it.angelic.soulissclient.fragments.q:
    it.angelic.soulissclient.fragments.RGBAdvancedFragment this$0 -> a
    java.lang.Short val$cmd -> b
    void run() -> run
it.angelic.soulissclient.fragments.RGBAdvancedFragment$3 -> it.angelic.soulissclient.fragments.r:
    it.angelic.soulissclient.fragments.RGBAdvancedFragment this$0 -> a
    java.lang.Short val$cmd -> b
    void run() -> run
it.angelic.soulissclient.fragments.RGBAdvancedFragment$4 -> it.angelic.soulissclient.fragments.s:
    it.angelic.soulissclient.fragments.RGBAdvancedFragment this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.fragments.RGBAdvancedFragment$5 -> it.angelic.soulissclient.fragments.t:
    it.angelic.soulissclient.fragments.RGBAdvancedFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
it.angelic.soulissclient.fragments.RGBAdvancedFragment$6 -> it.angelic.soulissclient.fragments.u:
    it.angelic.soulissclient.fragments.RGBAdvancedFragment this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
it.angelic.soulissclient.fragments.RGBAdvancedFragment$7 -> it.angelic.soulissclient.fragments.v:
    it.angelic.soulissclient.fragments.RGBAdvancedFragment this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.fragments.RGBAdvancedFragment$8 -> it.angelic.soulissclient.fragments.w:
    it.angelic.soulissclient.fragments.RGBAdvancedFragment this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
it.angelic.soulissclient.fragments.RGBAdvancedFragment$9 -> it.angelic.soulissclient.fragments.x:
    it.angelic.soulissclient.fragments.RGBAdvancedFragment this$0 -> a
    void colorChanged(int) -> a
it.angelic.soulissclient.fragments.RGBAdvancedFragment$ColorPickerView -> it.angelic.soulissclient.fragments.y:
    android.graphics.Paint paint -> b
    android.graphics.Paint centerPaint -> c
    boolean trackingCenter -> d
    android.graphics.RectF swapRect -> e
    int[] colors -> f
    it.angelic.soulissclient.fragments.RGBAdvancedFragment this$0 -> a
    void setCenterColor(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
it.angelic.soulissclient.fragments.RGBAdvancedFragment$OnColorChangedListener -> it.angelic.soulissclient.fragments.z:
    void colorChanged(int) -> a
it.angelic.soulissclient.fragments.SensorDetailFragment -> it.angelic.soulissclient.fragments.aa:
    org.achartengine.GraphicalView BarChartView -> P
    it.angelic.soulissclient.typicals.SoulissTypical collected -> Q
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> R
    android.widget.TextView upda -> S
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> T
    void onActivityCreated(android.os.Bundle) -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    it.angelic.soulissclient.fragments.SensorDetailFragment newInstance(int,it.angelic.soulissclient.typicals.SoulissTypical) -> a
    void onStart() -> j
    void redrawGraph(int,int) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onDestroy() -> o
    void drawHistoryGraph(android.widget.LinearLayout,java.util.HashMap,int) -> a
    void drawGroupedGraph(android.widget.LinearLayout,android.util.SparseArray,int,int) -> a
    void access$0(it.angelic.soulissclient.fragments.SensorDetailFragment,int,int) -> a
it.angelic.soulissclient.fragments.SensorDetailFragment$1 -> it.angelic.soulissclient.fragments.ab:
    it.angelic.soulissclient.fragments.SensorDetailFragment this$0 -> a
    android.widget.Spinner val$rangeSpinner -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.fragments.SensorDetailFragment$2 -> it.angelic.soulissclient.fragments.ac:
    it.angelic.soulissclient.fragments.SensorDetailFragment this$0 -> a
    android.widget.Spinner val$graphtSpinner -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.fragments.Typical1nFragment -> it.angelic.soulissclient.fragments.ad:
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> P
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> Q
    android.widget.Button buttPlus -> R
    it.angelic.soulissclient.typicals.SoulissTypical collected -> S
    android.widget.SeekBar timer -> T
    android.widget.Button btSleep -> U
    com.pheelicks.visualizer.VisualizerView mVisualizerView -> V
    android.widget.TextView timerInfo -> W
    android.widget.Button buttAuto -> X
    android.widget.TextView autoInfo -> Y
    android.widget.TextView infoTyp -> Z
    android.widget.ToggleButton togMassive -> aa
    android.content.BroadcastReceiver datareceiver -> ab
    void onActivityCreated(android.os.Bundle) -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void shutoff() -> B
    void turnOn(int) -> b
    it.angelic.soulissclient.fragments.Typical1nFragment newInstance(int,it.angelic.soulissclient.typicals.SoulissTypical) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onResume() -> k
    void onPause() -> l
    void onDestroy() -> o
    it.angelic.soulissclient.db.SoulissDBHelper access$0(it.angelic.soulissclient.fragments.Typical1nFragment) -> a
    it.angelic.soulissclient.typicals.SoulissTypical access$1(it.angelic.soulissclient.fragments.Typical1nFragment) -> b
    void access$2(it.angelic.soulissclient.fragments.Typical1nFragment,it.angelic.soulissclient.typicals.SoulissTypical) -> a
    android.widget.Button access$3(it.angelic.soulissclient.fragments.Typical1nFragment) -> c
    android.widget.SeekBar access$4(it.angelic.soulissclient.fragments.Typical1nFragment) -> d
    android.widget.TextView access$5(it.angelic.soulissclient.fragments.Typical1nFragment) -> e
    void access$6(it.angelic.soulissclient.fragments.Typical1nFragment) -> f
    void access$7(it.angelic.soulissclient.fragments.Typical1nFragment,int) -> a
    android.widget.ToggleButton access$8(it.angelic.soulissclient.fragments.Typical1nFragment) -> g
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$9(it.angelic.soulissclient.fragments.Typical1nFragment) -> h
it.angelic.soulissclient.fragments.Typical1nFragment$1 -> it.angelic.soulissclient.fragments.ae:
    it.angelic.soulissclient.fragments.Typical1nFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
it.angelic.soulissclient.fragments.Typical1nFragment$2 -> it.angelic.soulissclient.fragments.af:
    it.angelic.soulissclient.fragments.Typical1nFragment this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.fragments.Typical1nFragment$3 -> it.angelic.soulissclient.fragments.ag:
    it.angelic.soulissclient.fragments.Typical1nFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.fragments.Typical1nFragment access$0(it.angelic.soulissclient.fragments.Typical1nFragment$3) -> a
it.angelic.soulissclient.fragments.Typical1nFragment$3$1 -> it.angelic.soulissclient.fragments.ah:
    it.angelic.soulissclient.fragments.Typical1nFragment$3 this$1 -> a
    void run() -> run
it.angelic.soulissclient.fragments.Typical1nFragment$4 -> it.angelic.soulissclient.fragments.ai:
    it.angelic.soulissclient.fragments.Typical1nFragment this$0 -> a
    void onClick(android.view.View) -> onClick
it.angelic.soulissclient.fragments.Typical1nFragment$5 -> it.angelic.soulissclient.fragments.aj:
    it.angelic.soulissclient.fragments.Typical1nFragment this$0 -> a
    void run() -> run
it.angelic.soulissclient.fragments.Typical1nFragment$6 -> it.angelic.soulissclient.fragments.ak:
    it.angelic.soulissclient.fragments.Typical1nFragment this$0 -> a
    int val$i -> b
    void run() -> run
it.angelic.soulissclient.helpers.AlertDialogHelper -> it.angelic.soulissclient.c.a:
    android.app.AlertDialog$Builder sysNotInitedDialog(android.app.Activity) -> a
    void dbNotInitedDialog(android.app.Activity) -> b
    void serviceNotActiveDialog(android.app.Activity) -> c
    android.app.AlertDialog$Builder dropSoulissDBDialog(android.app.Activity,it.angelic.soulissclient.db.SoulissDBHelper) -> a
    void setExtra(android.content.Intent,java.lang.String) -> a
    android.app.AlertDialog$Builder removeCommandDialog(android.content.Context,android.widget.ListView,it.angelic.soulissclient.db.SoulissDBHelper,it.angelic.soulissclient.model.SoulissCommand) -> a
    android.app.AlertDialog$Builder renameSoulissObjectDialog(android.content.Context,android.widget.TextView,android.widget.ListView,it.angelic.soulissclient.db.SoulissDBHelper,it.angelic.soulissclient.model.ISoulissObject) -> a
    android.app.AlertDialog$Builder chooseIconDialog(android.content.Context,android.widget.ImageView,android.widget.ListView,it.angelic.soulissclient.db.SoulissDBHelper,it.angelic.soulissclient.model.ISoulissObject) -> a
    android.app.AlertDialog$Builder updateSoulissDBDialog(android.app.Activity,java.lang.String,it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
it.angelic.soulissclient.helpers.AlertDialogHelper$1 -> it.angelic.soulissclient.c.b:
    android.app.Activity val$source -> a
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$10 -> it.angelic.soulissclient.c.c:
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$11 -> it.angelic.soulissclient.c.d:
    android.widget.EditText val$input -> a
    it.angelic.soulissclient.model.ISoulissObject val$toRename -> b
    it.angelic.soulissclient.db.SoulissDBHelper val$datasource -> c
    android.widget.ListView val$listV -> d
    android.content.Context val$cont -> e
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opzioni -> f
    android.widget.TextView val$tgt -> g
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$12 -> it.angelic.soulissclient.c.e:
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$13 -> it.angelic.soulissclient.c.f:
    android.widget.Gallery val$gallery -> a
    it.angelic.soulissclient.model.ISoulissObject val$toRename -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
it.angelic.soulissclient.helpers.AlertDialogHelper$14 -> it.angelic.soulissclient.c.g:
    it.angelic.soulissclient.model.ISoulissObject val$toRename -> a
    it.angelic.soulissclient.db.SoulissDBHelper val$datasource -> b
    android.widget.ListView val$list -> c
    android.content.Context val$context -> d
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opzioni -> e
    android.widget.ImageView val$ctx -> f
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$15 -> it.angelic.soulissclient.c.h:
    it.angelic.soulissclient.model.ISoulissObject val$toRename -> a
    int val$savepoint -> b
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$18 -> it.angelic.soulissclient.c.i:
    android.app.Activity val$preferencesActivity -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opts -> b
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$18$1 -> it.angelic.soulissclient.c.j:
    it.angelic.soulissclient.helpers.AlertDialogHelper$18 this$1 -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opts -> b
    void run() -> run
it.angelic.soulissclient.helpers.AlertDialogHelper$19 -> it.angelic.soulissclient.c.k:
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$2 -> it.angelic.soulissclient.c.l:
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$3 -> it.angelic.soulissclient.c.m:
    android.widget.CheckBox val$checkBox -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opts -> b
    android.app.Activity val$source -> c
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$4 -> it.angelic.soulissclient.c.n:
    android.widget.CheckBox val$checkBox -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opts -> b
    android.app.Activity val$source -> c
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$5 -> it.angelic.soulissclient.c.o:
    android.widget.CheckBox val$checkBox -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opts -> b
    android.app.Activity val$source -> c
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$6 -> it.angelic.soulissclient.c.p:
    android.widget.CheckBox val$checkBox -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opts -> b
    android.app.Activity val$source -> c
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$7 -> it.angelic.soulissclient.c.q:
    it.angelic.soulissclient.db.SoulissDBHelper val$datasource -> a
    android.app.Activity val$source -> b
    android.content.SharedPreferences val$soulissCust -> c
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$8 -> it.angelic.soulissclient.c.r:
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.AlertDialogHelper$9 -> it.angelic.soulissclient.c.s:
    it.angelic.soulissclient.db.SoulissDBHelper val$datasource -> a
    it.angelic.soulissclient.model.SoulissCommand val$toRename -> b
    android.widget.ListView val$ctx -> c
    android.content.Context val$cont -> d
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.CSVReader -> it.angelic.soulissclient.c.t:
    java.io.BufferedReader br -> a
    boolean hasNext -> b
    char separator -> c
    char quotechar -> d
    int skipLines -> e
    boolean linesSkiped -> f
    java.lang.String[] readNext() -> a
    java.lang.String getNextLine() -> c
    java.lang.String[] parseLine(java.lang.String) -> a
    void close() -> b
it.angelic.soulissclient.helpers.CSVWriter -> it.angelic.soulissclient.c.u:
    java.io.PrintWriter pw -> a
    char separator -> b
    char quotechar -> c
    char escapechar -> d
    java.lang.String lineEnd -> e
    void writeNext(java.lang.String[]) -> a
    void close() -> a
it.angelic.soulissclient.helpers.Eula -> it.angelic.soulissclient.c.v:
    boolean show(android.app.Activity) -> a
    void accept(android.content.SharedPreferences) -> b
    void refuse(android.app.Activity) -> c
    java.lang.CharSequence readEula(android.app.Activity) -> d
    void closeStream(java.io.Closeable) -> a
    void access$0(android.content.SharedPreferences) -> a
    void access$1(android.app.Activity) -> b
it.angelic.soulissclient.helpers.Eula$1 -> it.angelic.soulissclient.c.w:
    android.content.SharedPreferences val$preferences -> a
    android.app.Activity val$activity -> b
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.Eula$2 -> it.angelic.soulissclient.c.x:
    android.app.Activity val$activity -> a
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.Eula$3 -> it.angelic.soulissclient.c.y:
    android.app.Activity val$activity -> a
    void onCancel(android.content.DialogInterface) -> onCancel
it.angelic.soulissclient.helpers.Eula$OnEulaAgreedTo -> it.angelic.soulissclient.c.z:
    void onEulaAgreedTo() -> a
it.angelic.soulissclient.helpers.ExportDatabaseCSVTask -> it.angelic.soulissclient.c.aa:
    android.content.Context context -> a
    java.lang.String TAG -> b
    java.text.SimpleDateFormat yearFormat -> c
    int exportedNodes -> d
    void loadContext(android.content.Context) -> a
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
it.angelic.soulissclient.helpers.GraphsHelper -> it.angelic.soulissclient.c.ab:
    org.achartengine.renderer.XYMultipleSeriesRenderer buildHistoryRenderer(android.content.Context,it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer buildHourRenderer(android.content.Context) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer buildMonthRenderer(android.content.Context) -> b
    void setChartSettings(org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String,java.lang.String,double,double,int,int) -> a
it.angelic.soulissclient.helpers.ImportDatabaseCSVTask -> it.angelic.soulissclient.c.ac:
    java.lang.String TAG -> b
    it.angelic.soulissclient.db.SoulissDBHelper DBob -> c
    android.content.SharedPreferences customSharedPreference -> d
    java.io.File file -> e
    int tottyp -> f
    int totNodes -> g
    android.app.Activity activity -> h
    android.app.ProgressDialog mProgressDialog -> a
    void setImportFile(java.io.File) -> a
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.String[]) -> a
    void insertLog(java.lang.String[]) -> b
    void insertTypical(java.lang.String[]) -> c
    void insertNode(java.lang.String[]) -> d
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    android.app.Activity access$2(it.angelic.soulissclient.helpers.ImportDatabaseCSVTask) -> a
it.angelic.soulissclient.helpers.ImportDatabaseCSVTask$1 -> it.angelic.soulissclient.c.ad:
    it.angelic.soulissclient.helpers.ImportDatabaseCSVTask this$0 -> a
    void run() -> run
it.angelic.soulissclient.helpers.ImportDatabaseCSVTask$2 -> it.angelic.soulissclient.c.ae:
    it.angelic.soulissclient.helpers.ImportDatabaseCSVTask this$0 -> a
    void run() -> run
it.angelic.soulissclient.helpers.ImportDatabaseCSVTask$3 -> it.angelic.soulissclient.c.af:
    it.angelic.soulissclient.helpers.ImportDatabaseCSVTask this$0 -> a
    void run() -> run
it.angelic.soulissclient.helpers.ImportDatabaseCSVTask$4 -> it.angelic.soulissclient.c.ag:
    it.angelic.soulissclient.helpers.ImportDatabaseCSVTask this$0 -> a
    int val$lines -> b
    void run() -> run
it.angelic.soulissclient.helpers.ImportDatabaseCSVTask$5 -> it.angelic.soulissclient.c.ah:
    it.angelic.soulissclient.helpers.ImportDatabaseCSVTask this$0 -> a
    void run() -> run
it.angelic.soulissclient.helpers.ImportDatabaseCSVTask$6 -> it.angelic.soulissclient.c.ai:
    it.angelic.soulissclient.helpers.ImportDatabaseCSVTask this$0 -> a
    void run() -> run
it.angelic.soulissclient.helpers.ImportDatabaseCSVTask$7 -> it.angelic.soulissclient.c.aj:
    it.angelic.soulissclient.helpers.ImportDatabaseCSVTask this$0 -> a
    void run() -> run
it.angelic.soulissclient.helpers.ListButton -> it.angelic.soulissclient.c.ak:
    void setPressed(boolean) -> setPressed
it.angelic.soulissclient.helpers.ListToggleButton -> it.angelic.soulissclient.c.al:
    void setPressed(boolean) -> setPressed
it.angelic.soulissclient.helpers.ScenesDialogHelper -> it.angelic.soulissclient.c.am:
    android.app.ProgressDialog progressDialog -> a
    void removeCommandDialog(android.content.Context,android.widget.ListView,it.angelic.soulissclient.db.SoulissDBHelper,it.angelic.soulissclient.model.SoulissScene,it.angelic.soulissclient.model.SoulissCommand,it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
    void removeSceneDialog(android.content.Context,android.widget.ListView,it.angelic.soulissclient.db.SoulissDBHelper,it.angelic.soulissclient.model.SoulissScene,it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
    android.app.AlertDialog$Builder addSceneCommandDialog(android.content.Context,android.widget.ListView,it.angelic.soulissclient.db.SoulissDBHelper,it.angelic.soulissclient.model.SoulissScene,it.angelic.soulissclient.helpers.SoulissPreferenceHelper,android.widget.FrameLayout) -> a
    void setTypicalSpinner(android.widget.Spinner,it.angelic.soulissclient.model.SoulissNode,android.content.Context) -> b
    void fillCommandSpinner(android.widget.Spinner,it.angelic.soulissclient.typicals.SoulissTypical,android.content.Context) -> b
    void executeSceneDialog(android.app.Activity,it.angelic.soulissclient.model.SoulissScene,it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
    java.lang.String[] splitStringEvery(java.lang.String,int) -> a
    void access$0(android.widget.Spinner,it.angelic.soulissclient.model.SoulissNode,android.content.Context) -> a
    void access$1(android.widget.Spinner,it.angelic.soulissclient.typicals.SoulissTypical,android.content.Context) -> a
    android.app.ProgressDialog access$2() -> a
it.angelic.soulissclient.helpers.ScenesDialogHelper$1 -> it.angelic.soulissclient.c.an:
    it.angelic.soulissclient.db.SoulissDBHelper val$datasource -> a
    it.angelic.soulissclient.model.SoulissCommand val$toRename -> b
    android.widget.ListView val$ctx -> c
    android.content.Context val$cont -> d
    it.angelic.soulissclient.model.SoulissScene val$tgt -> e
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opzioni -> f
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.ScenesDialogHelper$2 -> it.angelic.soulissclient.c.ao:
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.ScenesDialogHelper$3 -> it.angelic.soulissclient.c.ap:
    it.angelic.soulissclient.db.SoulissDBHelper val$datasource -> a
    it.angelic.soulissclient.model.SoulissScene val$toRename -> b
    android.widget.ListView val$ctx -> c
    android.content.Context val$cont -> d
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opts -> e
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.ScenesDialogHelper$4 -> it.angelic.soulissclient.c.aq:
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.ScenesDialogHelper$5 -> it.angelic.soulissclient.c.ar:
    android.widget.Spinner val$outputTypicalSpinner -> a
    it.angelic.soulissclient.model.SoulissNode[] val$nodiArray -> b
    android.content.Context val$context -> c
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.helpers.ScenesDialogHelper$6 -> it.angelic.soulissclient.c.as:
    it.angelic.soulissclient.model.SoulissNode[] val$nodiArray -> a
    android.widget.Spinner val$outputNodeSpinner -> b
    android.widget.Spinner val$outputCommandSpinner -> c
    android.content.Context val$context -> d
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
it.angelic.soulissclient.helpers.ScenesDialogHelper$7 -> it.angelic.soulissclient.c.at:
    android.widget.Spinner val$outputCommandSpinner -> a
    android.content.Context val$context -> b
    it.angelic.soulissclient.model.SoulissScene val$targetScene -> c
    android.widget.Spinner val$outputNodeSpinner -> d
    android.widget.Spinner val$outputTypicalSpinner -> e
    it.angelic.soulissclient.db.SoulissDBHelper val$datasource -> f
    android.widget.ListView val$list -> g
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opzioni -> h
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.ScenesDialogHelper$8 -> it.angelic.soulissclient.c.au:
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.helpers.ScenesDialogHelper$9 -> it.angelic.soulissclient.c.av:
    it.angelic.soulissclient.model.SoulissScene val$toExec -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opt -> b
    android.app.Activity val$preferencesActivity -> c
    void run() -> run
it.angelic.soulissclient.helpers.ScenesDialogHelper$9$1 -> it.angelic.soulissclient.c.aw:
    it.angelic.soulissclient.helpers.ScenesDialogHelper$9 this$1 -> a
    it.angelic.soulissclient.model.SoulissCommand val$soulissCommand -> b
    android.app.Activity val$preferencesActivity -> c
    void run() -> run
it.angelic.soulissclient.helpers.ScenesDialogHelper$9$2 -> it.angelic.soulissclient.c.ax:
    it.angelic.soulissclient.helpers.ScenesDialogHelper$9 this$1 -> a
    android.app.Activity val$preferencesActivity -> b
    it.angelic.soulissclient.model.SoulissScene val$toExec -> c
    void run() -> run
it.angelic.soulissclient.helpers.SoulissPreferenceHelper -> it.angelic.soulissclient.c.ay:
    long serialVersionUID -> serialVersionUID
    android.content.Context contx -> a
    android.content.SharedPreferences customSharedPreference -> b
    boolean fxOn -> c
    boolean lightTheme -> d
    java.lang.String IPPreference -> e
    java.lang.String IPPreferencePublic -> f
    float ListDimensTesto -> g
    int remoteTimeoutPref -> h
    java.lang.String PrefFont -> i
    java.lang.String cachedAddr -> j
    int dataServiceInterval -> k
    boolean dataServiceEnabled -> l
    java.lang.String DimensTesto -> m
    java.lang.String TAG -> n
    int userIndex -> o
    int backoff -> p
    boolean animations -> q
    void reload() -> a
    void initializePrefs() -> b
    void clearCachedAddress() -> c
    float getPrevDistance() -> d
    void setPrevDistance(float) -> a
    java.lang.String getAndSetCachedAddress() -> e
    java.lang.String getCachedAddress() -> f
    void setBestAddress() -> g
    android.content.SharedPreferences getCustomPref() -> h
    java.lang.String getIPPreferencePublic() -> i
    java.lang.Float getListDimensTesto() -> j
    java.lang.String getPrefFont() -> k
    java.lang.String getPrefIPAddress() -> l
    boolean getTextFx() -> m
    boolean isLightThemeSelected() -> n
    boolean isAnimationsEnabled() -> o
    boolean isDbConfigured() -> p
    boolean isSoulissReachable() -> q
    boolean isSoulissIpConfigured() -> r
    boolean isSoulissPublicIpConfigured() -> s
    void setIPPreferencePublic(java.lang.String) -> a
    void setIPPreference(java.lang.String) -> b
    int getRemoteTimeoutPref() -> t
    int getDataServiceIntervalMsec() -> u
    boolean isDataServiceEnabled() -> v
    void setDontShowAgain(java.lang.String,boolean) -> a
    boolean getDontShowAgain(java.lang.String) -> c
    void setHomeLatitude(double) -> a
    double getHomeLatitude() -> w
    void setHomeLongitude(double) -> b
    double getHomeLongitude() -> x
    void setCachedAddr(java.lang.String) -> d
    android.content.Context getContx() -> y
    int getUserIndex() -> z
    java.lang.Long getBackedOffServiceInterval() -> A
    void increaseBackoffTimeout() -> B
    void resetBackOff() -> C
    int getBackoff() -> D
    void setUserIndex(int) -> a
    android.content.SharedPreferences access$0(it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
it.angelic.soulissclient.helpers.SoulissPreferenceHelper$1 -> it.angelic.soulissclient.c.az:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper this$0 -> a
    void run() -> run
it.angelic.soulissclient.model.ISoulissObject -> it.angelic.soulissclient.d.a:
    void setIconResourceId(int) -> a
    int getDefaultIconResourceId() -> a
    void setName(java.lang.String) -> a
    java.lang.String getNiceName() -> b
it.angelic.soulissclient.model.SoulissCommand -> it.angelic.soulissclient.d.b:
    long serialVersionUID -> serialVersionUID
    it.angelic.soulissclient.db.SoulissCommandDTO commandDTO -> a
    android.content.Context ctx -> b
    it.angelic.soulissclient.typicals.SoulissTypical parentTypical -> c
    it.angelic.soulissclient.db.SoulissCommandDTO getCommandDTO() -> a
    int getType() -> b
    int getIconResId() -> c
    java.lang.String toString() -> toString
    it.angelic.soulissclient.typicals.SoulissTypical getParentTypical() -> d
    android.content.Context getCtx() -> e
    void setCtx(android.content.Context) -> a
it.angelic.soulissclient.model.SoulissNode -> it.angelic.soulissclient.d.c:
    long serialVersionUID -> serialVersionUID
    short health -> a
    int iconId -> b
    short id -> c
    java.lang.String Name -> d
    java.util.Calendar refreshedAt -> e
    java.util.List soulissTypicals -> f
    it.angelic.soulissclient.model.SoulissNode cursorToNode(android.database.Cursor) -> a
    void add(it.angelic.soulissclient.typicals.SoulissTypical) -> a
    short getHealth() -> c
    int getDefaultIconResourceId() -> a
    void setIconResourceId(int) -> a
    short getId() -> d
    java.lang.String getNiceName() -> b
    java.util.Calendar getRefreshedAt() -> e
    java.util.List getTypicals() -> f
    java.util.ArrayList getActiveTypicals() -> g
    void setHealth(short) -> a
    void setName(java.lang.String) -> a
    void setRefreshedAt(java.util.Calendar) -> a
    void setTypicals(java.util.List) -> a
    it.angelic.soulissclient.typicals.SoulissTypical getTypical(short) -> b
    java.lang.String toString() -> toString
    java.lang.String getName() -> h
it.angelic.soulissclient.model.SoulissScene -> it.angelic.soulissclient.d.d:
    long serialVersionUID -> serialVersionUID
    java.util.ArrayList commandArray -> a
    android.content.Context ctx -> b
    java.lang.String name -> c
    int iconId -> d
    int Id -> e
    java.lang.String toString() -> toString
    java.lang.String getNiceName() -> b
    void setName(java.lang.String) -> a
    int getId() -> c
    int getDefaultIconResourceId() -> a
    void setIconResourceId(int) -> a
    java.util.ArrayList getCommandArray() -> d
    void setCommandArray(java.util.ArrayList) -> a
it.angelic.soulissclient.model.SoulissTrigger -> it.angelic.soulissclient.d.e:
    long serialVersionUID -> serialVersionUID
    it.angelic.soulissclient.db.SoulissTriggerDTO triggerDto -> a
    it.angelic.soulissclient.db.SoulissTriggerDTO getTriggerDto() -> f
    void setTriggerDto(it.angelic.soulissclient.db.SoulissTriggerDTO) -> a
    it.angelic.soulissclient.db.SoulissCommandDTO getCommandDto() -> g
    void persist(it.angelic.soulissclient.db.SoulissDBHelper) -> a
it.angelic.soulissclient.net.Constants -> it.angelic.soulissclient.e.a:
    java.lang.Byte[] PING_PAYLOAD -> a
    java.lang.Byte[] DBSTRUCT_PAYLOAD -> b
it.angelic.soulissclient.net.UDPHelper -> it.angelic.soulissclient.e.b:
    java.util.ArrayList buildVNetFrame(java.util.List,java.lang.String,int) -> a
    java.util.ArrayList buildMaCaCoForce(byte,java.lang.String,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList buildMaCaCoMassive(byte,java.lang.String,java.lang.String[]) -> a
    java.lang.String issueSoulissCommand(it.angelic.soulissclient.model.SoulissCommand,it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
    java.lang.String issueMassiveCommand(java.lang.String,it.angelic.soulissclient.helpers.SoulissPreferenceHelper,java.lang.String[]) -> a
    java.lang.String issueSoulissCommand(java.lang.String,java.lang.String,it.angelic.soulissclient.helpers.SoulissPreferenceHelper,int,java.lang.String[]) -> a
    java.net.InetAddress ping(java.lang.String,java.lang.String,int) -> a
    void requestDBStruct(it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
    byte[] toByteArray(java.util.ArrayList) -> a
    void stateRequest(it.angelic.soulissclient.helpers.SoulissPreferenceHelper,int,int) -> a
    void pollRequest(it.angelic.soulissclient.helpers.SoulissPreferenceHelper,int,int) -> b
    java.net.DatagramSocket getSenderSocket(java.net.InetAddress) -> a
    void typicalRequest(it.angelic.soulissclient.helpers.SoulissPreferenceHelper,int,int) -> c
    void healthRequest(it.angelic.soulissclient.helpers.SoulissPreferenceHelper,int,int) -> d
    java.lang.String checkSoulissUdp(int,it.angelic.soulissclient.helpers.SoulissPreferenceHelper,java.lang.String) -> a
it.angelic.soulissclient.net.UDPRunnable -> it.angelic.soulissclient.e.c:
    java.net.DatagramSocket socket -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> b
    android.content.Context context -> c
    void run() -> run
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$0(it.angelic.soulissclient.net.UDPRunnable) -> a
it.angelic.soulissclient.net.UDPRunnable$1 -> it.angelic.soulissclient.e.d:
    it.angelic.soulissclient.net.UDPRunnable this$0 -> a
    java.net.DatagramPacket val$packet -> b
    void run() -> run
it.angelic.soulissclient.net.UDPSoulissDecoder -> it.angelic.soulissclient.e.e:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> a
    it.angelic.soulissclient.db.SoulissDBLowHelper database -> b
    android.content.SharedPreferences customSharedPreference -> c
    android.content.Context context -> d
    void decodevNet(java.net.DatagramPacket) -> a
    void decodeMacaco(java.util.ArrayList) -> a
    void processTriggers() -> a
    void decodePing(java.util.ArrayList) -> b
    void decodeDBStructRequest(java.util.ArrayList) -> c
    void decodeTypRequest(java.util.ArrayList) -> d
    void decodeStateRequest(java.util.ArrayList) -> e
    void decodeHealthRequest(java.util.ArrayList) -> f
it.angelic.soulissclient.net.UDPSoulissDecoder$1 -> it.angelic.soulissclient.e.f:
    it.angelic.soulissclient.net.UDPSoulissDecoder this$0 -> a
    int val$nodes -> b
    void run() -> run
it.angelic.soulissclient.preferences.DbPreferenceListener -> it.angelic.soulissclient.preferences.a:
    android.app.Activity parent -> a
    java.io.File mPath -> b
    java.lang.String[] mFileList -> c
    java.lang.String mChosenFile -> d
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> e
    it.angelic.soulissclient.db.SoulissDBHelper datasource -> f
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    boolean exportDb() -> a
    void loadFileList() -> b
    android.app.Dialog onCreateDialog(int) -> a
    boolean createDbRequest() -> c
    java.lang.String[] access$0(it.angelic.soulissclient.preferences.DbPreferenceListener) -> a
    void access$1(it.angelic.soulissclient.preferences.DbPreferenceListener,java.lang.String) -> a
    java.lang.String access$2(it.angelic.soulissclient.preferences.DbPreferenceListener) -> b
    android.app.Activity access$3(it.angelic.soulissclient.preferences.DbPreferenceListener) -> c
    java.io.File access$4(it.angelic.soulissclient.preferences.DbPreferenceListener) -> d
it.angelic.soulissclient.preferences.DbPreferenceListener$1 -> it.angelic.soulissclient.preferences.b:
    it.angelic.soulissclient.preferences.DbPreferenceListener this$0 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
it.angelic.soulissclient.preferences.DbPreferenceListener$2 -> it.angelic.soulissclient.preferences.c:
    it.angelic.soulissclient.preferences.DbPreferenceListener this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
it.angelic.soulissclient.preferences.DbSettingsFragment -> it.angelic.soulissclient.preferences.DbSettingsFragment:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
it.angelic.soulissclient.preferences.IpChangerListener -> it.angelic.soulissclient.preferences.d:
    android.app.Activity parent -> a
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> b
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$0(it.angelic.soulissclient.preferences.IpChangerListener) -> a
    android.app.Activity access$1(it.angelic.soulissclient.preferences.IpChangerListener) -> b
it.angelic.soulissclient.preferences.IpChangerListener$1 -> it.angelic.soulissclient.preferences.e:
    it.angelic.soulissclient.preferences.IpChangerListener this$0 -> a
    android.preference.Preference val$preference -> b
    java.lang.Object val$newValue -> c
    void run() -> run
    it.angelic.soulissclient.preferences.IpChangerListener access$0(it.angelic.soulissclient.preferences.IpChangerListener$1) -> a
it.angelic.soulissclient.preferences.IpChangerListener$1$1 -> it.angelic.soulissclient.preferences.f:
    it.angelic.soulissclient.preferences.IpChangerListener$1 this$1 -> a
    android.preference.Preference val$preference -> b
    void run() -> run
it.angelic.soulissclient.preferences.IpChangerListener$1$2 -> it.angelic.soulissclient.preferences.g:
    it.angelic.soulissclient.preferences.IpChangerListener$1 this$1 -> a
    android.preference.Preference val$preference -> b
    java.net.InetAddress val$checkIPt -> c
    java.lang.String val$pars -> d
    void run() -> run
it.angelic.soulissclient.preferences.IpChangerListener$1$3 -> it.angelic.soulissclient.preferences.h:
    it.angelic.soulissclient.preferences.IpChangerListener$1 this$1 -> a
    android.preference.Preference val$preference -> b
    java.lang.Exception val$e -> c
    void run() -> run
it.angelic.soulissclient.preferences.NetSettingsFragment -> it.angelic.soulissclient.preferences.NetSettingsFragment:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> a
    void onCreate(android.os.Bundle) -> onCreate
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$0(it.angelic.soulissclient.preferences.NetSettingsFragment) -> a
it.angelic.soulissclient.preferences.NetSettingsFragment$1 -> it.angelic.soulissclient.preferences.i:
    it.angelic.soulissclient.preferences.NetSettingsFragment this$0 -> a
    android.preference.Preference val$userIdx -> b
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
it.angelic.soulissclient.preferences.ServicePreferenceListener -> it.angelic.soulissclient.preferences.j:
    android.app.Activity parent -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
it.angelic.soulissclient.preferences.ServiceSettingsFragment -> it.angelic.soulissclient.preferences.ServiceSettingsFragment:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> a
    void onCreate(android.os.Bundle) -> onCreate
    void resetMesg(android.preference.Preference) -> a
    void access$0(it.angelic.soulissclient.preferences.ServiceSettingsFragment,android.preference.Preference) -> a
it.angelic.soulissclient.preferences.ServiceSettingsFragment$1 -> it.angelic.soulissclient.preferences.k:
    it.angelic.soulissclient.preferences.ServiceSettingsFragment this$0 -> a
    android.location.LocationManager val$locationManager -> b
    java.lang.String val$provider -> c
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper val$opzioni -> d
    android.preference.Preference val$setHomeLocation -> e
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
it.angelic.soulissclient.preferences.VisualSettingsFragment -> it.angelic.soulissclient.preferences.VisualSettingsFragment:
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper opzioni -> a
    void onCreate(android.os.Bundle) -> onCreate
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper access$0(it.angelic.soulissclient.preferences.VisualSettingsFragment) -> a
it.angelic.soulissclient.preferences.VisualSettingsFragment$1 -> it.angelic.soulissclient.preferences.l:
    it.angelic.soulissclient.preferences.VisualSettingsFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
it.angelic.soulissclient.typicals.SoulissTypical -> it.angelic.soulissclient.f.a:
    long serialVersionUID -> serialVersionUID
    it.angelic.soulissclient.model.SoulissNode parentNode -> d
    it.angelic.soulissclient.db.SoulissTypicalDTO typicalDTO -> a
    boolean isSlave -> e
    boolean isSensor -> f
    android.content.Context ctx -> b
    it.angelic.soulissclient.helpers.SoulissPreferenceHelper prefs -> c
    java.lang.String getNiceName() -> b
    void setIconResourceId(int) -> a
    void setName(java.lang.String) -> a
    it.angelic.soulissclient.typicals.SoulissTypical typicalFactory(short,it.angelic.soulissclient.model.SoulissNode,it.angelic.soulissclient.db.SoulissTypicalDTO,it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
    java.lang.String getDefaultName() -> c
    int getDefaultIconResourceId() -> a
    it.angelic.soulissclient.model.SoulissNode getParentNode() -> d
    void setParentNode(it.angelic.soulissclient.model.SoulissNode) -> a
    boolean isEmpty() -> e
    boolean isRelated() -> f
    void setRelated(boolean) -> a
    java.util.ArrayList getCommands(android.content.Context) -> a
    it.angelic.soulissclient.db.SoulissTypicalDTO getTypicalDTO() -> g
    void setTypicalDTO(it.angelic.soulissclient.db.SoulissTypicalDTO) -> a
    java.lang.String toString() -> toString
    android.content.Context getCtx() -> h
    void setCtx(android.content.Context) -> b
    boolean isSensor() -> i
    void setSensor(boolean) -> b
    void setPrefs(it.angelic.soulissclient.helpers.SoulissPreferenceHelper) -> a
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
    android.widget.TextView getQuickActionTitle() -> j
    java.lang.String getOutputDesc() -> k
    void setOutputDescView(android.widget.TextView) -> a
it.angelic.soulissclient.typicals.SoulissTypical11 -> it.angelic.soulissclient.f.b:
    long serialVersionUID -> serialVersionUID
    java.util.ArrayList getCommands(android.content.Context) -> a
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
    void setOutputDescView(android.widget.TextView) -> a
    java.lang.String getOutputDesc() -> k
it.angelic.soulissclient.typicals.SoulissTypical11$1 -> it.angelic.soulissclient.f.c:
    it.angelic.soulissclient.typicals.SoulissTypical11 this$0 -> a
    it.angelic.soulissclient.helpers.ListToggleButton val$tog -> b
    it.angelic.soulissclient.helpers.ListButton val$turnOnButton -> c
    it.angelic.soulissclient.helpers.ListButton val$turnOffButton -> d
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical11 access$0(it.angelic.soulissclient.typicals.SoulissTypical11$1) -> a
it.angelic.soulissclient.typicals.SoulissTypical11$1$1 -> it.angelic.soulissclient.f.d:
    it.angelic.soulissclient.typicals.SoulissTypical11$1 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical11$2 -> it.angelic.soulissclient.f.e:
    it.angelic.soulissclient.typicals.SoulissTypical11 this$0 -> a
    it.angelic.soulissclient.helpers.ListToggleButton val$tog -> b
    it.angelic.soulissclient.helpers.ListButton val$turnOnButton -> c
    it.angelic.soulissclient.helpers.ListButton val$turnOffButton -> d
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical11 access$0(it.angelic.soulissclient.typicals.SoulissTypical11$2) -> a
it.angelic.soulissclient.typicals.SoulissTypical11$2$1 -> it.angelic.soulissclient.f.f:
    it.angelic.soulissclient.typicals.SoulissTypical11$2 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical11$3 -> it.angelic.soulissclient.f.g:
    it.angelic.soulissclient.typicals.SoulissTypical11 this$0 -> a
    it.angelic.soulissclient.helpers.ListToggleButton val$tog -> b
    it.angelic.soulissclient.helpers.ListButton val$turnOnButton -> c
    it.angelic.soulissclient.helpers.ListButton val$turnOffButton -> d
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical11 access$0(it.angelic.soulissclient.typicals.SoulissTypical11$3) -> a
it.angelic.soulissclient.typicals.SoulissTypical11$3$1 -> it.angelic.soulissclient.f.h:
    it.angelic.soulissclient.typicals.SoulissTypical11$3 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical12 -> it.angelic.soulissclient.f.i:
    long serialVersionUID -> serialVersionUID
    java.util.ArrayList getCommands(android.content.Context) -> a
    java.lang.String getOutputDesc() -> k
    void setOutputDescView(android.widget.TextView) -> a
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
it.angelic.soulissclient.typicals.SoulissTypical12$1 -> it.angelic.soulissclient.f.j:
    it.angelic.soulissclient.typicals.SoulissTypical12 this$0 -> a
    it.angelic.soulissclient.helpers.ListButton val$tog -> b
    it.angelic.soulissclient.helpers.ListButton val$turnOnButton -> c
    it.angelic.soulissclient.helpers.ListButton val$turnOffButton -> d
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical12 access$0(it.angelic.soulissclient.typicals.SoulissTypical12$1) -> a
it.angelic.soulissclient.typicals.SoulissTypical12$1$1 -> it.angelic.soulissclient.f.k:
    it.angelic.soulissclient.typicals.SoulissTypical12$1 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical12$2 -> it.angelic.soulissclient.f.l:
    it.angelic.soulissclient.typicals.SoulissTypical12 this$0 -> a
    it.angelic.soulissclient.helpers.ListButton val$tog -> b
    it.angelic.soulissclient.helpers.ListButton val$turnOnButton -> c
    it.angelic.soulissclient.helpers.ListButton val$turnOffButton -> d
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical12 access$0(it.angelic.soulissclient.typicals.SoulissTypical12$2) -> a
it.angelic.soulissclient.typicals.SoulissTypical12$2$1 -> it.angelic.soulissclient.f.m:
    it.angelic.soulissclient.typicals.SoulissTypical12$2 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical12$3 -> it.angelic.soulissclient.f.n:
    it.angelic.soulissclient.typicals.SoulissTypical12 this$0 -> a
    it.angelic.soulissclient.helpers.ListButton val$tog -> b
    it.angelic.soulissclient.helpers.ListButton val$turnOnButton -> c
    it.angelic.soulissclient.helpers.ListButton val$turnOffButton -> d
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical12 access$0(it.angelic.soulissclient.typicals.SoulissTypical12$3) -> a
it.angelic.soulissclient.typicals.SoulissTypical12$3$1 -> it.angelic.soulissclient.f.o:
    it.angelic.soulissclient.typicals.SoulissTypical12$3 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical13 -> it.angelic.soulissclient.f.p:
    long serialVersionUID -> serialVersionUID
    java.util.ArrayList getCommands(android.content.Context) -> a
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
    java.lang.String getOutputDesc() -> k
it.angelic.soulissclient.typicals.SoulissTypical14 -> it.angelic.soulissclient.f.q:
    long serialVersionUID -> serialVersionUID
    java.util.ArrayList getCommands(android.content.Context) -> a
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
    java.lang.String getOutputDesc() -> k
it.angelic.soulissclient.typicals.SoulissTypical14$1 -> it.angelic.soulissclient.f.r:
    it.angelic.soulissclient.typicals.SoulissTypical14 this$0 -> a
    it.angelic.soulissclient.helpers.ListButton val$turnOnButton -> b
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical14 access$0(it.angelic.soulissclient.typicals.SoulissTypical14$1) -> a
it.angelic.soulissclient.typicals.SoulissTypical14$1$1 -> it.angelic.soulissclient.f.s:
    it.angelic.soulissclient.typicals.SoulissTypical14$1 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical15 -> it.angelic.soulissclient.f.t:
    long serialVersionUID -> serialVersionUID
    java.util.ArrayList getCommands(android.content.Context) -> a
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
    java.lang.String getOutputDesc() -> k
it.angelic.soulissclient.typicals.SoulissTypical15$1 -> it.angelic.soulissclient.f.u:
    it.angelic.soulissclient.typicals.SoulissTypical15 this$0 -> a
    android.content.Context val$ctx -> b
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical15 access$0(it.angelic.soulissclient.typicals.SoulissTypical15$1) -> a
it.angelic.soulissclient.typicals.SoulissTypical15$1$1 -> it.angelic.soulissclient.f.v:
    it.angelic.soulissclient.typicals.SoulissTypical15$1 this$1 -> a
    android.content.Context val$ctx -> b
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical15$2 -> it.angelic.soulissclient.f.w:
    it.angelic.soulissclient.typicals.SoulissTypical15 this$0 -> a
    it.angelic.soulissclient.helpers.ListButton val$tog -> b
    it.angelic.soulissclient.helpers.ListButton val$turnON -> c
    it.angelic.soulissclient.helpers.ListButton val$turnOFF -> d
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical15 access$0(it.angelic.soulissclient.typicals.SoulissTypical15$2) -> a
it.angelic.soulissclient.typicals.SoulissTypical15$2$1 -> it.angelic.soulissclient.f.x:
    it.angelic.soulissclient.typicals.SoulissTypical15$2 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical15$3 -> it.angelic.soulissclient.f.y:
    it.angelic.soulissclient.typicals.SoulissTypical15 this$0 -> a
    it.angelic.soulissclient.helpers.ListButton val$tog -> b
    it.angelic.soulissclient.helpers.ListButton val$turnON -> c
    it.angelic.soulissclient.helpers.ListButton val$turnOFF -> d
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical15 access$0(it.angelic.soulissclient.typicals.SoulissTypical15$3) -> a
it.angelic.soulissclient.typicals.SoulissTypical15$3$1 -> it.angelic.soulissclient.f.z:
    it.angelic.soulissclient.typicals.SoulissTypical15$3 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB -> it.angelic.soulissclient.f.aa:
    long serialVersionUID -> serialVersionUID
    java.util.ArrayList getCommands(android.content.Context) -> a
    int getColor() -> l
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
    void setOutputDescView(android.widget.TextView) -> a
    java.lang.String getOutputDesc() -> k
    void issueIrCommand(short,int,int,int,boolean) -> a
it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB$1 -> it.angelic.soulissclient.f.ab:
    it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB this$0 -> a
    it.angelic.soulissclient.helpers.ListButton val$turnON -> b
    it.angelic.soulissclient.helpers.ListButton val$turnOFF -> c
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB access$0(it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB$1) -> a
it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB$1$1 -> it.angelic.soulissclient.f.ac:
    it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB$1 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB$2 -> it.angelic.soulissclient.f.ad:
    it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB this$0 -> a
    it.angelic.soulissclient.helpers.ListButton val$turnON -> b
    it.angelic.soulissclient.helpers.ListButton val$turnOFF -> c
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB access$0(it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB$2) -> a
it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB$2$1 -> it.angelic.soulissclient.f.ae:
    it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB$2 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB$3 -> it.angelic.soulissclient.f.af:
    it.angelic.soulissclient.typicals.SoulissTypical16AdvancedRGB this$0 -> a
    boolean val$togMulticast -> b
    short val$val -> c
    int val$r -> d
    int val$g -> e
    int val$b -> f
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical21 -> it.angelic.soulissclient.f.ag:
    long serialVersionUID -> serialVersionUID
    java.util.ArrayList getCommands(android.content.Context) -> a
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
    java.lang.String getOutputDesc() -> k
it.angelic.soulissclient.typicals.SoulissTypical21$1 -> it.angelic.soulissclient.f.ah:
    it.angelic.soulissclient.typicals.SoulissTypical21 this$0 -> a
    it.angelic.soulissclient.helpers.ListButton val$turnOnButton -> b
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical21 access$0(it.angelic.soulissclient.typicals.SoulissTypical21$1) -> a
it.angelic.soulissclient.typicals.SoulissTypical21$1$1 -> it.angelic.soulissclient.f.ai:
    it.angelic.soulissclient.typicals.SoulissTypical21$1 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical22 -> it.angelic.soulissclient.f.aj:
    long serialVersionUID -> serialVersionUID
    java.lang.String getOutputDesc() -> k
    java.util.ArrayList getCommands(android.content.Context) -> a
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
it.angelic.soulissclient.typicals.SoulissTypical22$1 -> it.angelic.soulissclient.f.ak:
    it.angelic.soulissclient.typicals.SoulissTypical22 this$0 -> a
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical22 access$0(it.angelic.soulissclient.typicals.SoulissTypical22$1) -> a
it.angelic.soulissclient.typicals.SoulissTypical22$1$1 -> it.angelic.soulissclient.f.al:
    it.angelic.soulissclient.typicals.SoulissTypical22$1 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical22$2 -> it.angelic.soulissclient.f.am:
    it.angelic.soulissclient.typicals.SoulissTypical22 this$0 -> a
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical22 access$0(it.angelic.soulissclient.typicals.SoulissTypical22$2) -> a
it.angelic.soulissclient.typicals.SoulissTypical22$2$1 -> it.angelic.soulissclient.f.an:
    it.angelic.soulissclient.typicals.SoulissTypical22$2 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical22$3 -> it.angelic.soulissclient.f.ao:
    it.angelic.soulissclient.typicals.SoulissTypical22 this$0 -> a
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical22 access$0(it.angelic.soulissclient.typicals.SoulissTypical22$3) -> a
it.angelic.soulissclient.typicals.SoulissTypical22$3$1 -> it.angelic.soulissclient.f.ap:
    it.angelic.soulissclient.typicals.SoulissTypical22$3 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical32AirCon -> it.angelic.soulissclient.f.aq:
    long serialVersionUID -> serialVersionUID
    it.angelic.soulissclient.typicals.SoulissTypical related -> d
    java.util.ArrayList getCommands(android.content.Context) -> a
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
    void setOutputDescView(android.widget.TextView) -> a
    java.lang.String getOutputDesc() -> k
it.angelic.soulissclient.typicals.SoulissTypical54LuxSensor -> it.angelic.soulissclient.f.ar:
    long serialVersionUID -> serialVersionUID
    java.lang.String getOutputDesc() -> k
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
it.angelic.soulissclient.typicals.SoulissTypical5n -> it.angelic.soulissclient.f.as:
    long serialVersionUID -> serialVersionUID
    it.angelic.soulissclient.helpers.ListButton turnOnButton -> d
    int transientVal -> e
    android.widget.SeekBar bar -> f
    java.util.ArrayList getCommands(android.content.Context) -> a
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
    java.lang.String getOutputDesc() -> k
    void setTransientVal(int) -> b
    it.angelic.soulissclient.helpers.ListButton access$0(it.angelic.soulissclient.typicals.SoulissTypical5n) -> a
    android.widget.SeekBar access$1(it.angelic.soulissclient.typicals.SoulissTypical5n) -> b
    void access$2(it.angelic.soulissclient.typicals.SoulissTypical5n,int) -> a
    int access$3(it.angelic.soulissclient.typicals.SoulissTypical5n) -> c
it.angelic.soulissclient.typicals.SoulissTypical5n$1 -> it.angelic.soulissclient.f.at:
    it.angelic.soulissclient.typicals.SoulissTypical5n this$0 -> a
    void onClick(android.view.View) -> onClick
    it.angelic.soulissclient.typicals.SoulissTypical5n access$0(it.angelic.soulissclient.typicals.SoulissTypical5n$1) -> a
it.angelic.soulissclient.typicals.SoulissTypical5n$1$1 -> it.angelic.soulissclient.f.au:
    it.angelic.soulissclient.typicals.SoulissTypical5n$1 this$1 -> a
    void run() -> run
it.angelic.soulissclient.typicals.SoulissTypical5n$analogInputListener -> it.angelic.soulissclient.f.av:
    it.angelic.soulissclient.typicals.SoulissTypical5n this$0 -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
it.angelic.soulissclient.typicals.SoulissTypicalCurrentSensor -> it.angelic.soulissclient.f.aw:
    long serialVersionUID -> serialVersionUID
    int getOutputFloat() -> l
    java.lang.String getOutputDesc() -> k
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
it.angelic.soulissclient.typicals.SoulissTypicalHumiditySensor -> it.angelic.soulissclient.f.ax:
    long serialVersionUID -> serialVersionUID
    float getOutputFloat() -> l
    java.lang.String getOutputPercent() -> m
    java.lang.String getOutputDesc() -> k
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
it.angelic.soulissclient.typicals.SoulissTypicalTemperatureSensor -> it.angelic.soulissclient.f.ay:
    long serialVersionUID -> serialVersionUID
    float getOutputFloat() -> l
    java.lang.String getOutputCelsius() -> m
    java.lang.String getOutputDesc() -> k
    void getActionsLayout(it.angelic.soulissclient.adapters.TypicalsListAdapter,android.content.Context,android.content.Intent,android.view.View,android.view.ViewGroup) -> a
org.achartengine.ChartFactory -> a.a.a:
    org.achartengine.GraphicalView getTimeChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> a
    org.achartengine.GraphicalView getCombinedXYChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String[]) -> a
    void checkParameters(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
org.achartengine.GraphicalView -> a.a.b:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.DefaultRenderer mRenderer -> b
    android.graphics.Rect mRect -> c
    android.os.Handler mHandler -> d
    android.graphics.RectF mZoomR -> e
    android.graphics.Bitmap zoomInImage -> f
    android.graphics.Bitmap zoomOutImage -> g
    android.graphics.Bitmap fitZoomImage -> h
    int zoomSize -> i
    int ZOOM_BUTTONS_COLOR -> j
    org.achartengine.tools.Zoom mZoomIn -> k
    org.achartengine.tools.Zoom mZoomOut -> l
    org.achartengine.tools.FitZoom mFitZoom -> m
    android.graphics.Paint mPaint -> n
    org.achartengine.ITouchHandler mTouchHandler -> o
    float oldX -> p
    float oldY -> q
    boolean mDrawn -> r
    org.achartengine.model.SeriesSelection getCurrentSeriesAndPoint() -> getCurrentSeriesAndPoint
    void onDraw(android.graphics.Canvas) -> onDraw
    void setZoomRate(float) -> setZoomRate
    void zoomIn() -> a
    void zoomOut() -> b
    void zoomReset() -> c
    android.graphics.RectF getZoomRectangle() -> getZoomRectangle
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void repaint() -> d
org.achartengine.GraphicalView$1 -> a.a.c:
    org.achartengine.GraphicalView this$0 -> a
    void run() -> run
org.achartengine.ITouchHandler -> a.a.d:
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandler -> a.a.e:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    float oldX2 -> d
    float oldY2 -> e
    android.graphics.RectF zoomR -> f
    org.achartengine.tools.Pan mPan -> g
    org.achartengine.tools.Zoom mPinchZoom -> h
    org.achartengine.GraphicalView graphicalView -> i
    boolean handleTouch(android.view.MotionEvent) -> a
    void applyZoom(float,int) -> a
org.achartengine.TouchHandlerOld -> a.a.f:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    android.graphics.RectF zoomR -> d
    org.achartengine.tools.Pan mPan -> e
    org.achartengine.GraphicalView graphicalView -> f
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.chart.AbstractChart -> a.a.a.a:
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    void drawBackground(org.achartengine.renderer.DefaultRenderer,android.graphics.Canvas,int,int,int,int,android.graphics.Paint,boolean,int) -> a
    int drawLegend(android.graphics.Canvas,org.achartengine.renderer.DefaultRenderer,java.lang.String[],int,int,int,int,int,int,android.graphics.Paint,boolean) -> a
    void drawString(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint) -> a
    boolean getExceed(float,org.achartengine.renderer.DefaultRenderer,int,int) -> a
    boolean isVertical(org.achartengine.renderer.DefaultRenderer) -> a
    java.lang.String getLabel(java.text.NumberFormat,double) -> a
    float[] calculateDrawPoints(float,float,float,float,int,int) -> a
    void drawPath(android.graphics.Canvas,java.util.List,android.graphics.Paint,boolean) -> a
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    int getLegendSize(org.achartengine.renderer.DefaultRenderer,int,float) -> a
    boolean isNullValue(double) -> a
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
org.achartengine.chart.BarChart -> a.a.a.b:
    org.achartengine.chart.BarChart$Type mType -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    void drawBar(android.graphics.Canvas,float,float,float,float,float,int,int,android.graphics.Paint) -> a
    void drawBar(android.graphics.Canvas,float,float,float,float,int,int,android.graphics.Paint) -> a
    int getGradientPartialColor(int,int,float) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,java.util.List,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    float getHalfDiffX(java.util.List,int,int) -> a
    float getCoeficient() -> a
    boolean isRenderNullValues() -> b
    java.lang.String getChartType() -> c
org.achartengine.chart.BarChart$Type -> a.a.a.c:
    org.achartengine.chart.BarChart$Type DEFAULT -> a
    org.achartengine.chart.BarChart$Type STACKED -> b
    org.achartengine.chart.BarChart$Type[] $VALUES -> c
    org.achartengine.chart.BarChart$Type[] values() -> values
    org.achartengine.chart.BarChart$Type valueOf(java.lang.String) -> valueOf
org.achartengine.chart.BubbleChart -> a.a.a.d:
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.ClickableArea -> a.a.a.e:
    android.graphics.RectF rect -> a
    double x -> b
    double y -> c
    android.graphics.RectF getRect() -> a
    double getX() -> b
    double getY() -> c
org.achartengine.chart.CombinedXYChart -> a.a.a.f:
    org.achartengine.chart.XYChart[] mCharts -> a
    java.lang.Class[] xyChartTypes -> d
    org.achartengine.chart.XYChart getXYChart(java.lang.String) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> a
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.CubicLineChart -> a.a.a.g:
    float firstMultiplier -> a
    float secondMultiplier -> d
    org.achartengine.model.Point p1 -> e
    org.achartengine.model.Point p2 -> f
    org.achartengine.model.Point p3 -> g
    void drawPath(android.graphics.Canvas,java.util.List,android.graphics.Paint,boolean) -> a
    void calc(java.util.List,org.achartengine.model.Point,int,int,float) -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.LineChart -> a.a.a.h:
    org.achartengine.chart.ScatterChart pointsChart -> a
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> a_
    java.lang.String getChartType() -> c
org.achartengine.chart.LineChart$1 -> a.a.a.i:
    int[] $SwitchMap$org$achartengine$renderer$XYSeriesRenderer$FillOutsideLine -> a
org.achartengine.chart.PointStyle -> a.a.a.j:
    org.achartengine.chart.PointStyle X -> a
    org.achartengine.chart.PointStyle CIRCLE -> b
    org.achartengine.chart.PointStyle TRIANGLE -> c
    org.achartengine.chart.PointStyle SQUARE -> d
    org.achartengine.chart.PointStyle DIAMOND -> e
    org.achartengine.chart.PointStyle POINT -> f
    java.lang.String mName -> g
    org.achartengine.chart.PointStyle[] $VALUES -> h
    org.achartengine.chart.PointStyle[] values() -> values
    org.achartengine.chart.PointStyle valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> a
    java.lang.String toString() -> toString
org.achartengine.chart.RangeBarChart -> a.a.a.k:
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,java.util.List,int,int) -> a
    float getCoeficient() -> a
    java.lang.String getChartType() -> c
org.achartengine.chart.RangeStackedBarChart -> a.a.a.l:
    java.lang.String getChartType() -> c
org.achartengine.chart.RoundChart -> a.a.a.m:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    int mCenterX -> b
    int mCenterY -> c
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    org.achartengine.renderer.DefaultRenderer getRenderer() -> a
    int getCenterX() -> b
    int getCenterY() -> c
    void setCenterX(int) -> b
    void setCenterY(int) -> c
org.achartengine.chart.ScatterChart -> a.a.a.n:
    float size -> a
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> a
    int getLegendShapeWidth(int) -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    void drawX(android.graphics.Canvas,android.graphics.Paint,float,float) -> a
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float) -> b
    void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> a
    void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float) -> c
    void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> b
    java.lang.String getChartType() -> c
org.achartengine.chart.ScatterChart$1 -> a.a.a.o:
    int[] $SwitchMap$org$achartengine$chart$PointStyle -> a
org.achartengine.chart.TimeChart -> a.a.a.p:
    java.lang.String mDateFormat -> a
    java.lang.Double mStartPoint -> d
    void setDateFormat(java.lang.String) -> a
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    java.text.DateFormat getDateFormat(double,double) -> a
    java.lang.String getChartType() -> c
    java.util.List getXLabels(double,double,int) -> a
org.achartengine.chart.XYChart -> a.a.a.q:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> b
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> c
    float mScale -> a
    float mTranslate -> d
    org.achartengine.model.Point mCenter -> e
    android.graphics.Rect mScreenR -> f
    java.util.Map mCalcRange -> g
    java.util.Map clickableAreas -> h
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> a
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    java.util.List getXLabels(double,double,int) -> a
    java.util.Map getYLabels(double[],double[],int) -> a
    android.graphics.Rect getScreenR() -> d
    void setScreenR(android.graphics.Rect) -> a
    java.util.List getValidLabels(java.util.List) -> a
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> a
    void setStroke(android.graphics.Paint$Cap,android.graphics.Paint$Join,float,android.graphics.Paint$Style,android.graphics.PathEffect,android.graphics.Paint) -> a
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,java.util.List,int,int) -> a
    void drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,float) -> a
    void transform(android.graphics.Canvas,float,boolean) -> a
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    void drawYLabels(java.util.Map,android.graphics.Canvas,android.graphics.Paint,int,int,int,int,double[],double[]) -> a
    void drawXTextLabels(java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,boolean,int,int,int,double,double,double) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer getRenderer() -> e
    org.achartengine.model.XYMultipleSeriesDataset getDataset() -> f
    double[] getCalcRange(int) -> b
    void setCalcRange(double[],int) -> a
    int getLabelLinePos(android.graphics.Paint$Align) -> a
    double[] toRealPoint(float,float,int) -> a
    double[] toScreenPoint(double[],int) -> b
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> a
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> a
    boolean isRenderNullValues() -> b
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> a_
    java.lang.String getChartType() -> c
org.achartengine.model.CategorySeries -> a.a.b.a:
    java.lang.String mTitle -> a
    java.util.List mCategories -> b
    java.util.List mValues -> c
    java.lang.String getTitle() -> a
    void add(double) -> a
    void add(java.lang.String,double) -> a
    double getValue(int) -> a
    int getItemCount() -> b
    org.achartengine.model.XYSeries toXYSeries() -> c
org.achartengine.model.Point -> a.a.b.b:
    float mX -> a
    float mY -> b
    float getX() -> a
    float getY() -> b
    void setX(float) -> a
    void setY(float) -> b
org.achartengine.model.RangeCategorySeries -> a.a.b.c:
    java.util.List mMaxValues -> a
    void add(double,double) -> a
    double getMinimumValue(int) -> b
    double getMaximumValue(int) -> c
    org.achartengine.model.XYSeries toXYSeries() -> c
org.achartengine.model.SeriesSelection -> a.a.b.d:
    int mSeriesIndex -> a
    int mPointIndex -> b
    double mXValue -> c
    double mValue -> d
org.achartengine.model.TimeSeries -> a.a.b.e:
    void add(java.util.Date,double) -> a
org.achartengine.model.XYMultipleSeriesDataset -> a.a.b.f:
    java.util.List mSeries -> a
    void addSeries(org.achartengine.model.XYSeries) -> a
    void addSeries(int,org.achartengine.model.XYSeries) -> a
    org.achartengine.model.XYSeries getSeriesAt(int) -> a
    int getSeriesCount() -> a
    org.achartengine.model.XYSeries[] getSeries() -> b
org.achartengine.model.XYSeries -> a.a.b.g:
    java.lang.String mTitle -> a
    org.achartengine.util.IndexXYMap mXY -> b
    double mMinX -> c
    double mMaxX -> d
    double mMinY -> e
    double mMaxY -> f
    int mScaleNumber -> g
    java.util.List mAnnotations -> h
    org.achartengine.util.IndexXYMap mStringXY -> i
    int getScaleNumber() -> a
    void initRange() -> i
    void updateRange(double,double) -> b
    java.lang.String getTitle() -> b
    void add(double,double) -> a
    double getX(int) -> a
    double getY(int) -> b
    double getAnnotationX(int) -> c
    double getAnnotationY(int) -> d
    int getAnnotationCount() -> c
    java.lang.String getAnnotationAt(int) -> e
    java.util.SortedMap getRange(double,double,boolean) -> a
    int getIndexForKey(double) -> a
    int getItemCount() -> d
    double getMinX() -> e
    double getMinY() -> f
    double getMaxX() -> g
    double getMaxY() -> h
org.achartengine.model.XYValueSeries -> a.a.b.h:
    java.util.List mValue -> a
    double mMinValue -> b
    double mMaxValue -> c
    void add(double,double,double) -> a
    void updateRange(double) -> b
    void add(double,double) -> a
    double getValue(int) -> f
    double getMaxValue() -> i
org.achartengine.renderer.BasicStroke -> a.a.c.a:
    org.achartengine.renderer.BasicStroke SOLID -> a
    org.achartengine.renderer.BasicStroke DASHED -> b
    org.achartengine.renderer.BasicStroke DOTTED -> c
    android.graphics.Paint$Cap mCap -> d
    android.graphics.Paint$Join mJoin -> e
    float mMiter -> f
    float[] mIntervals -> g
    float mPhase -> h
    android.graphics.Paint$Cap getCap() -> a
    android.graphics.Paint$Join getJoin() -> b
    float getMiter() -> c
    float[] getIntervals() -> d
    float getPhase() -> e
org.achartengine.renderer.DefaultRenderer -> a.a.c.b:
    java.lang.String mChartTitle -> a
    float mChartTitleTextSize -> b
    android.graphics.Typeface REGULAR_TEXT_FONT -> c
    java.lang.String mTextTypefaceName -> d
    int mTextTypefaceStyle -> e
    android.graphics.Typeface mTextTypeface -> f
    int mBackgroundColor -> g
    boolean mApplyBackgroundColor -> h
    boolean mShowAxes -> i
    int mAxesColor -> j
    boolean mShowLabels -> k
    int mLabelsColor -> l
    float mLabelsTextSize -> m
    boolean mShowLegend -> n
    float mLegendTextSize -> o
    boolean mFitLegend -> p
    boolean mShowGridX -> q
    boolean mShowGridY -> r
    boolean mShowCustomTextGrid -> s
    java.util.List mRenderers -> t
    boolean mAntialiasing -> u
    int mLegendHeight -> v
    int[] mMargins -> w
    float mScale -> x
    boolean mPanEnabled -> y
    boolean mZoomEnabled -> z
    boolean mZoomButtonsVisible -> A
    float mZoomRate -> B
    boolean mExternalZoomEnabled -> C
    float mOriginalScale -> D
    boolean mClickEnabled -> E
    int selectableBuffer -> F
    boolean mInScroll -> G
    float mStartAngle -> H
    java.lang.String getChartTitle() -> a
    void setChartTitle(java.lang.String) -> a
    float getChartTitleTextSize() -> b
    void setChartTitleTextSize(float) -> a
    void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    void addSeriesRenderer(int,org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.renderer.SimpleSeriesRenderer getSeriesRendererAt(int) -> a
    int getSeriesRendererCount() -> c
    int getBackgroundColor() -> d
    boolean isApplyBackgroundColor() -> e
    int getAxesColor() -> f
    void setAxesColor(int) -> b
    int getLabelsColor() -> g
    void setLabelsColor(int) -> c
    float getLabelsTextSize() -> h
    void setLabelsTextSize(float) -> b
    boolean isShowAxes() -> i
    boolean isShowLabels() -> j
    boolean isShowGridX() -> k
    boolean isShowGridY() -> l
    void setShowGridX(boolean) -> a
    void setShowGridY(boolean) -> b
    void setShowGrid(boolean) -> c
    boolean isShowCustomTextGrid() -> m
    boolean isShowLegend() -> n
    void setShowLegend(boolean) -> d
    boolean isFitLegend() -> o
    java.lang.String getTextTypefaceName() -> p
    int getTextTypefaceStyle() -> q
    android.graphics.Typeface getTextTypeface() -> r
    float getLegendTextSize() -> s
    void setLegendTextSize(float) -> c
    boolean isAntialiasing() -> t
    void setAntialiasing(boolean) -> e
    float getScale() -> u
    float getOriginalScale() -> v
    void setScale(float) -> d
    boolean isZoomEnabled() -> w
    boolean isZoomButtonsVisible() -> x
    boolean isExternalZoomEnabled() -> y
    float getZoomRate() -> z
    boolean isPanEnabled() -> A
    boolean isClickEnabled() -> B
    int getSelectableBuffer() -> C
    int getLegendHeight() -> D
    int[] getMargins() -> E
    void setMargins(int[]) -> a
    boolean isInScroll() -> F
org.achartengine.renderer.SimpleSeriesRenderer -> a.a.c.c:
    int mColor -> a
    boolean mDisplayChartValues -> b
    int mDisplayChartValuesDistance -> c
    float mChartValuesTextSize -> d
    android.graphics.Paint$Align mChartValuesTextAlign -> e
    float mChartValuesSpacing -> f
    org.achartengine.renderer.BasicStroke mStroke -> g
    boolean mGradientEnabled -> h
    double mGradientStartValue -> i
    int mGradientStartColor -> j
    double mGradientStopValue -> k
    int mGradientStopColor -> l
    boolean mShowLegendItem -> m
    java.text.NumberFormat mChartValuesFormat -> n
    boolean mDisplayBoundingPoints -> o
    int getColor() -> a
    void setColor(int) -> a
    boolean isDisplayChartValues() -> b
    void setDisplayChartValues(boolean) -> a
    int getDisplayChartValuesDistance() -> c
    float getChartValuesTextSize() -> d
    void setChartValuesTextSize(float) -> a
    android.graphics.Paint$Align getChartValuesTextAlign() -> e
    float getChartValuesSpacing() -> f
    org.achartengine.renderer.BasicStroke getStroke() -> g
    boolean isGradientEnabled() -> h
    void setGradientEnabled(boolean) -> b
    double getGradientStartValue() -> i
    int getGradientStartColor() -> j
    void setGradientStart(double,int) -> a
    double getGradientStopValue() -> k
    int getGradientStopColor() -> l
    void setGradientStop(double,int) -> b
    boolean isShowLegendItem() -> m
    boolean isDisplayBoundingPoints() -> n
    java.text.NumberFormat getChartValuesFormat() -> o
org.achartengine.renderer.XYMultipleSeriesRenderer -> a.a.c.d:
    java.lang.String mXTitle -> a
    java.lang.String[] mYTitle -> b
    float mAxisTitleTextSize -> c
    double[] mMinX -> d
    double[] mMaxX -> e
    double[] mMinY -> f
    double[] mMaxY -> g
    int mXLabels -> h
    int mYLabels -> i
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation mOrientation -> j
    java.util.Map mXTextLabels -> k
    java.util.Map mYTextLabels -> l
    boolean mPanXEnabled -> m
    boolean mPanYEnabled -> n
    boolean mZoomXEnabled -> o
    boolean mZoomYEnabled -> p
    double mBarSpacing -> q
    int mMarginsColor -> r
    double[] mPanLimits -> s
    double[] mZoomLimits -> t
    float mXLabelsAngle -> u
    float mYLabelsAngle -> v
    java.util.Map initialRange -> w
    float mPointSize -> x
    int mGridColor -> y
    int scalesCount -> z
    android.graphics.Paint$Align xLabelsAlign -> A
    android.graphics.Paint$Align[] yLabelsAlign -> B
    float mXLabelsPadding -> C
    float mYLabelsPadding -> D
    float mYLabelsVerticalPadding -> E
    android.graphics.Paint$Align[] yAxisAlign -> F
    int mXLabelsColor -> G
    int[] mYLabelsColor -> H
    boolean mXRoundedLabels -> I
    java.text.NumberFormat mLabelFormat -> J
    float mBarWidth -> K
    void initAxesRange(int) -> d
    void initAxesRangeForScale(int) -> e
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation getOrientation() -> G
    java.lang.String getXTitle() -> H
    java.lang.String getYTitle() -> I
    java.lang.String getYTitle(int) -> f
    void setYTitle(java.lang.String) -> b
    void setYTitle(java.lang.String,int) -> a
    float getAxisTitleTextSize() -> J
    void setAxisTitleTextSize(float) -> e
    void setXAxisMin(double) -> a
    void setXAxisMax(double) -> b
    void setYAxisMin(double) -> c
    void setYAxisMax(double) -> d
    double getXAxisMin(int) -> g
    void setXAxisMin(double,int) -> a
    boolean isMinXSet(int) -> h
    double getXAxisMax(int) -> i
    void setXAxisMax(double,int) -> b
    boolean isMaxXSet(int) -> j
    double getYAxisMin(int) -> k
    void setYAxisMin(double,int) -> c
    boolean isMinYSet(int) -> l
    double getYAxisMax(int) -> m
    void setYAxisMax(double,int) -> d
    boolean isMaxYSet(int) -> n
    int getXLabels() -> K
    void setXLabels(int) -> o
    void addXTextLabel(double,java.lang.String) -> a
    java.lang.String getXTextLabel(java.lang.Double) -> a
    java.lang.Double[] getXTextLabelLocations() -> L
    boolean isXRoundedLabels() -> M
    java.lang.String getYTextLabel(java.lang.Double,int) -> a
    java.lang.Double[] getYTextLabelLocations(int) -> p
    int getYLabels() -> N
    void setYLabels(int) -> q
    float getBarWidth() -> O
    boolean isPanEnabled() -> A
    boolean isPanXEnabled() -> P
    boolean isPanYEnabled() -> Q
    void setPanEnabled(boolean,boolean) -> a
    boolean isZoomEnabled() -> w
    boolean isZoomXEnabled() -> R
    boolean isZoomYEnabled() -> S
    void setZoomEnabled(boolean,boolean) -> b
    double getBarSpacing() -> T
    void setBarSpacing(double) -> e
    int getMarginsColor() -> U
    void setMarginsColor(int) -> r
    int getGridColor() -> V
    double[] getPanLimits() -> W
    double[] getZoomLimits() -> X
    float getXLabelsAngle() -> Y
    void setXLabelsAngle(float) -> f
    float getYLabelsAngle() -> Z
    float getPointSize() -> aa
    void setPointSize(float) -> g
    void setRange(double[],int) -> a
    boolean isInitialRangeSet() -> ab
    boolean isInitialRangeSet(int) -> s
    double[] getInitialRange(int) -> t
    int getXLabelsColor() -> ac
    int getYLabelsColor(int) -> u
    void setXLabelsColor(int) -> v
    android.graphics.Paint$Align getXLabelsAlign() -> ad
    void setXLabelsAlign(android.graphics.Paint$Align) -> a
    android.graphics.Paint$Align getYLabelsAlign(int) -> w
    void setYLabelsAlign(android.graphics.Paint$Align) -> b
    android.graphics.Paint$Align getYAxisAlign(int) -> x
    void setYLabelsAlign(android.graphics.Paint$Align,int) -> a
    float getXLabelsPadding() -> ae
    float getYLabelsPadding() -> af
    float getYLabelsVerticalPadding() -> ag
    java.text.NumberFormat getLabelFormat() -> ah
    int getScalesCount() -> ai
org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation -> a.a.c.e:
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation VERTICAL -> b
    int mAngle -> c
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] $VALUES -> d
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] values() -> values
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation valueOf(java.lang.String) -> valueOf
    int getAngle() -> a
org.achartengine.renderer.XYSeriesRenderer -> a.a.c.f:
    boolean mFillPoints -> a
    java.util.List mFillBelowLine -> b
    org.achartengine.chart.PointStyle mPointStyle -> c
    float mPointStrokeWidth -> d
    float mLineWidth -> e
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine[] getFillOutsideLine() -> p
    boolean isFillPoints() -> q
    void setFillPoints(boolean) -> c
    org.achartengine.chart.PointStyle getPointStyle() -> r
    void setPointStyle(org.achartengine.chart.PointStyle) -> a
    float getPointStrokeWidth() -> s
    float getLineWidth() -> t
org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine -> a.a.c.g:
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine NONE -> a
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine BOUNDS_ALL -> b
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine BOUNDS_BELOW -> c
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine BOUNDS_ABOVE -> d
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine BELOW -> e
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine ABOVE -> f
    int mColor -> g
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine[] $VALUES -> h
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine[] values() -> values
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine valueOf(java.lang.String) -> valueOf
    int getColor() -> a
org.achartengine.tools.AbstractTool -> a.a.d.a:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    double[] getRange(int) -> a
    void checkRange(double[],int) -> a
    void setXRange(double,double,int) -> a
    void setYRange(double,double,int) -> b
org.achartengine.tools.FitZoom -> a.a.d.b:
    void apply() -> a
org.achartengine.tools.Pan -> a.a.d.c:
    java.util.List mPanListeners -> c
    boolean limitsReachedX -> d
    boolean limitsReachedY -> e
    void apply(float,float,float,float) -> a
    double getAxisRatio(double[]) -> a
    void notifyPanListeners() -> a
org.achartengine.tools.PanListener -> a.a.d.d:
    void panApplied() -> a
org.achartengine.tools.Zoom -> a.a.d.e:
    boolean mZoomIn -> c
    float mZoomRate -> d
    java.util.List mZoomListeners -> e
    boolean limitsReachedX -> f
    boolean limitsReachedY -> g
    void setZoomRate(float) -> a
    void apply(int) -> b
    void notifyZoomListeners(org.achartengine.tools.ZoomEvent) -> a
    void notifyZoomResetListeners() -> a
org.achartengine.tools.ZoomEvent -> a.a.d.f:
    boolean mZoomIn -> a
    float mZoomRate -> b
org.achartengine.tools.ZoomListener -> a.a.d.g:
    void zoomApplied(org.achartengine.tools.ZoomEvent) -> a
    void zoomReset() -> a
org.achartengine.util.IndexXYMap -> a.a.e.a:
    java.util.List indexList -> a
    double maxXDifference -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void updateMaxXDifference() -> a
    void clear() -> clear
    java.lang.Object getXByIndex(int) -> a
    java.lang.Object getYByIndex(int) -> b
    int getIndexForKey(java.lang.Object) -> a
org.achartengine.util.MathHelper -> a.a.e.b:
    java.text.NumberFormat FORMAT -> a
    java.util.List getLabels(double,double,int) -> a
    double[] computeLabels(double,double,int) -> b
    double roundUp(double) -> a
